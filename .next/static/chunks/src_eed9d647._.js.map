{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/contexts/AuthContext.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { createContext, useContext, useState, useEffect } from 'react'\n\ninterface AuthContextType {\n  isAuthenticated: boolean\n  user: { username: string } | null\n  login: (username: string, password: string) => boolean\n  logout: () => void\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const [user, setUser] = useState<{ username: string } | null>(null)\n\n  useEffect(() => {\n    // Check if user is already logged in (from localStorage)\n    const savedAuth = localStorage.getItem('smelterxplore_auth')\n    if (savedAuth) {\n      const authData = JSON.parse(savedAuth)\n      setIsAuthenticated(true)\n      setUser(authData.user)\n    }\n  }, [])\n\n  const login = (username: string, password: string): boolean => {\n    // Simple authentication - in real app, this would be an API call\n    if (username === 'kanghaji' && password === '475400') {\n      const userData = { username }\n      setIsAuthenticated(true)\n      setUser(userData)\n      localStorage.setItem('smelterxplore_auth', JSON.stringify({ user: userData }))\n      return true\n    }\n    return false\n  }\n\n  const logout = () => {\n    setIsAuthenticated(false)\n    setUser(null)\n    localStorage.removeItem('smelterxplore_auth')\n  }\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider')\n  }\n  return context\n}\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAWA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAAiC;;IACtE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA+B;IAE9D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,yDAAyD;YACzD,MAAM,YAAY,aAAa,OAAO,CAAC;YACvC,IAAI,WAAW;gBACb,MAAM,WAAW,KAAK,KAAK,CAAC;gBAC5B,mBAAmB;gBACnB,QAAQ,SAAS,IAAI;YACvB;QACF;iCAAG,EAAE;IAEL,MAAM,QAAQ,CAAC,UAAkB;QAC/B,iEAAiE;QACjE,IAAI,aAAa,cAAc,aAAa,UAAU;YACpD,MAAM,WAAW;gBAAE;YAAS;YAC5B,mBAAmB;YACnB,QAAQ;YACR,aAAa,OAAO,CAAC,sBAAsB,KAAK,SAAS,CAAC;gBAAE,MAAM;YAAS;YAC3E,OAAO;QACT;QACA,OAAO;IACT;IAEA,MAAM,SAAS;QACb,mBAAmB;QACnB,QAAQ;QACR,aAAa,UAAU,CAAC;IAC1B;IAEA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAiB;YAAM;YAAO;QAAO;kBACjE;;;;;;AAGP;GArCgB;KAAA;AAuCT,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OAC8D;IACjE,qBACE,6LAAC;QACC,aAAU;QACV,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAbS;AAeT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS","debugId":null}},
    {"offset": {"line": 427, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/auth/LoginPage.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from 'react'\nimport { useAuth } from '@/contexts/AuthContext'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\n\nexport default function LoginPage() {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const { login } = useAuth()\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setError('')\n    setIsLoading(true)\n\n    // Simulate loading delay for better UX\n    await new Promise(resolve => setTimeout(resolve, 500))\n\n    const success = login(username, password)\n    if (!success) {\n      setError('Invalid username or password')\n    }\n    setIsLoading(false)\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 p-4\">\n      <div className=\"w-full max-w-md\">\n        {/* Logo and Title */}\n        <div className=\"text-center mb-8\">\n          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-gradient-to-r from-orange-500 to-red-600 rounded-full mb-4\">\n            <span className=\"text-2xl font-bold text-white\">SX</span>\n          </div>\n          <h1 className=\"text-3xl font-bold text-white mb-2\">\n            SmelterXplore™️\n          </h1>\n          <p className=\"text-slate-400\">\n            Quality Monitoring System\n          </p>\n        </div>\n\n        <Card className=\"bg-slate-800/50 border-slate-700 backdrop-blur-sm\">\n          <CardHeader className=\"space-y-1\">\n            <CardTitle className=\"text-2xl text-center text-white\">\n              Sign In\n            </CardTitle>\n            <CardDescription className=\"text-center text-slate-400\">\n              Enter your credentials to access the dashboard\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"username\" className=\"text-slate-200\">\n                  Username\n                </Label>\n                <Input\n                  id=\"username\"\n                  type=\"text\"\n                  placeholder=\"Enter your username\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                  required\n                  className=\"bg-slate-700/50 border-slate-600 text-white placeholder:text-slate-400 focus:border-orange-500\"\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"password\" className=\"text-slate-200\">\n                  Password\n                </Label>\n                <Input\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder=\"Enter your password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                  className=\"bg-slate-700/50 border-slate-600 text-white placeholder:text-slate-400 focus:border-orange-500\"\n                />\n              </div>\n              \n              {error && (\n                <Alert className=\"bg-red-900/20 border-red-800 text-red-400\">\n                  <AlertDescription>{error}</AlertDescription>\n                </Alert>\n              )}\n\n              <Button\n                type=\"submit\"\n                className=\"w-full bg-gradient-to-r from-orange-500 to-red-600 hover:from-orange-600 hover:to-red-700 text-white font-medium\"\n                disabled={isLoading}\n              >\n                {isLoading ? 'Signing In...' : 'Sign In'}\n              </Button>\n            </form>\n\n            <div className=\"mt-6 text-center text-sm text-slate-400\">\n              <p>Demo Credentials:</p>\n              <p>Username: <span className=\"text-orange-400 font-mono\">kanghaji</span></p>\n              <p>Password: <span className=\"text-orange-400 font-mono\">475400</span></p>\n            </div>\n          </CardContent>\n        </Card>\n\n        <div className=\"mt-8 text-center text-xs text-slate-500\">\n          <p>© 2024 SmelterXplore™️. Advanced Quality Monitoring System</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 743, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 795, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1044, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/data.ts"],"sourcesContent":["export interface ProcessingLocation {\n  id: string\n  name: string\n  product: string\n  targetQuality: {\n    parameter: string\n    minValue: number\n    unit: string\n  }\n}\n\nexport interface QualityData {\n  id: string\n  locationId: string\n  location: string\n  product: string\n  parameter: string\n  value: number\n  unit: string\n  targetMin: number\n  date: string\n  timestamp: string\n  status: 'PASS' | 'FAIL' | 'WARNING'\n  sampleId: string\n  analyst: string\n}\n\nexport const PROCESSING_LOCATIONS: ProcessingLocation[] = [\n  {\n    id: 'discharge_point',\n    name: 'DISCHARGE POINT',\n    product: 'Copper Concentrate',\n    targetQuality: {\n      parameter: 'Copper',\n      minValue: 25,\n      unit: '%'\n    }\n  },\n  {\n    id: 'flash_smelting_furnace',\n    name: 'FLASH SMELTING FURNACE',\n    product: 'Copper Matte',\n    targetQuality: {\n      parameter: 'Copper',\n      minValue: 70,\n      unit: '%'\n    }\n  },\n  {\n    id: 'slag_concentrator',\n    name: 'SLAG CONCENTRATOR',\n    product: 'Recovery Copper Concentrate',\n    targetQuality: {\n      parameter: 'Copper',\n      minValue: 22,\n      unit: '%'\n    }\n  },\n  {\n    id: 'acid_plant',\n    name: 'ACID PLANT',\n    product: 'Sulfuric Acid',\n    targetQuality: {\n      parameter: 'Sulfuric Acid',\n      minValue: 98.5,\n      unit: '%'\n    }\n  },\n  {\n    id: 'flash_converting_furnace',\n    name: 'FLASH CONVERTING FURNACE',\n    product: 'Copper Blister',\n    targetQuality: {\n      parameter: 'Copper',\n      minValue: 98.5,\n      unit: '%'\n    }\n  },\n  {\n    id: 'anode_furnace',\n    name: 'ANODE FURNACE & ANODE CASTING WHEEL',\n    product: 'Copper Anode',\n    targetQuality: {\n      parameter: 'Copper',\n      minValue: 99.2,\n      unit: '%'\n    }\n  },\n  {\n    id: 'copper_electro_refining',\n    name: 'COPPER ELECTRO REFINING',\n    product: 'Copper Cathode',\n    targetQuality: {\n      parameter: 'Copper',\n      minValue: 99.99,\n      unit: '%'\n    }\n  },\n  {\n    id: 'pmr_gold',\n    name: 'PMR_Gold',\n    product: 'Gold',\n    targetQuality: {\n      parameter: 'Gold',\n      minValue: 99.99,\n      unit: '%'\n    }\n  },\n  {\n    id: 'pmr_silver',\n    name: 'PMR_Silver',\n    product: 'Silver',\n    targetQuality: {\n      parameter: 'Silver',\n      minValue: 99.99,\n      unit: '%'\n    }\n  }\n]\n\n// Generate sample data\nfunction generateSampleData(): QualityData[] {\n  const data: QualityData[] = []\n  const analysts = ['Dr. Smith', 'Dr. Johnson', 'Dr. Williams', 'Dr. Brown', 'Dr. Davis']\n  \n  PROCESSING_LOCATIONS.forEach(location => {\n    // Generate 50 samples for each location\n    for (let i = 0; i < 50; i++) {\n      const baseDate = new Date()\n      baseDate.setDate(baseDate.getDate() - Math.floor(Math.random() * 30)) // Last 30 days\n      baseDate.setHours(Math.floor(Math.random() * 24))\n      baseDate.setMinutes(Math.floor(Math.random() * 60))\n      \n      // Generate realistic values around the target\n      const target = location.targetQuality.minValue\n      let value: number\n      \n      // 80% chance of passing, 15% warning, 5% fail\n      const rand = Math.random()\n      if (rand < 0.8) {\n        // Pass - above target\n        value = target + (Math.random() * (target * 0.05)) // 0-5% above target\n      } else if (rand < 0.95) {\n        // Warning - slightly below target\n        value = target - (Math.random() * (target * 0.02)) // 0-2% below target\n      } else {\n        // Fail - significantly below target\n        value = target - (Math.random() * (target * 0.1)) // 0-10% below target\n      }\n      \n      // Round to appropriate decimal places\n      value = Math.round(value * 100) / 100\n      \n      let status: 'PASS' | 'FAIL' | 'WARNING'\n      if (value >= target) {\n        status = 'PASS'\n      } else if (value >= target * 0.98) {\n        status = 'WARNING'\n      } else {\n        status = 'FAIL'\n      }\n      \n      data.push({\n        id: `${location.id}_${i + 1}`,\n        locationId: location.id,\n        location: location.name,\n        product: location.product,\n        parameter: location.targetQuality.parameter,\n        value,\n        unit: location.targetQuality.unit,\n        targetMin: target,\n        date: baseDate.toISOString().split('T')[0],\n        timestamp: baseDate.toISOString(),\n        status,\n        sampleId: `${location.id.toUpperCase()}-${String(i + 1).padStart(3, '0')}`,\n        analyst: analysts[Math.floor(Math.random() * analysts.length)]\n      })\n    }\n  })\n  \n  return data.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime())\n}\n\nexport const SAMPLE_DATA = generateSampleData()\n\n// Helper functions\nexport function getLocationData(locationId: string): QualityData[] {\n  return SAMPLE_DATA.filter(data => data.locationId === locationId)\n}\n\nexport function getRecentData(days: number = 7): QualityData[] {\n  const cutoffDate = new Date()\n  cutoffDate.setDate(cutoffDate.getDate() - days)\n  return SAMPLE_DATA.filter(data => new Date(data.timestamp) >= cutoffDate)\n}\n\nexport function getAlerts(): QualityData[] {\n  return SAMPLE_DATA.filter(data => data.status === 'FAIL' || data.status === 'WARNING')\n    .slice(0, 20) // Latest 20 alerts\n}\n\nexport function getLocationStats(locationId: string) {\n  const locationData = getLocationData(locationId)\n  const total = locationData.length\n  const passed = locationData.filter(d => d.status === 'PASS').length\n  const warnings = locationData.filter(d => d.status === 'WARNING').length\n  const failed = locationData.filter(d => d.status === 'FAIL').length\n  \n  return {\n    total,\n    passed,\n    warnings,\n    failed,\n    passRate: total > 0 ? Math.round((passed / total) * 100) : 0,\n    averageValue: total > 0 ? Math.round((locationData.reduce((sum, d) => sum + d.value, 0) / total) * 100) / 100 : 0\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AA2BO,MAAM,uBAA6C;IACxD;QACE,IAAI;QACJ,MAAM;QACN,SAAS;QACT,eAAe;YACb,WAAW;YACX,UAAU;YACV,MAAM;QACR;IACF;IACA;QACE,IAAI;QACJ,MAAM;QACN,SAAS;QACT,eAAe;YACb,WAAW;YACX,UAAU;YACV,MAAM;QACR;IACF;IACA;QACE,IAAI;QACJ,MAAM;QACN,SAAS;QACT,eAAe;YACb,WAAW;YACX,UAAU;YACV,MAAM;QACR;IACF;IACA;QACE,IAAI;QACJ,MAAM;QACN,SAAS;QACT,eAAe;YACb,WAAW;YACX,UAAU;YACV,MAAM;QACR;IACF;IACA;QACE,IAAI;QACJ,MAAM;QACN,SAAS;QACT,eAAe;YACb,WAAW;YACX,UAAU;YACV,MAAM;QACR;IACF;IACA;QACE,IAAI;QACJ,MAAM;QACN,SAAS;QACT,eAAe;YACb,WAAW;YACX,UAAU;YACV,MAAM;QACR;IACF;IACA;QACE,IAAI;QACJ,MAAM;QACN,SAAS;QACT,eAAe;YACb,WAAW;YACX,UAAU;YACV,MAAM;QACR;IACF;IACA;QACE,IAAI;QACJ,MAAM;QACN,SAAS;QACT,eAAe;YACb,WAAW;YACX,UAAU;YACV,MAAM;QACR;IACF;IACA;QACE,IAAI;QACJ,MAAM;QACN,SAAS;QACT,eAAe;YACb,WAAW;YACX,UAAU;YACV,MAAM;QACR;IACF;CACD;AAED,uBAAuB;AACvB,SAAS;IACP,MAAM,OAAsB,EAAE;IAC9B,MAAM,WAAW;QAAC;QAAa;QAAe;QAAgB;QAAa;KAAY;IAEvF,qBAAqB,OAAO,CAAC,CAAA;QAC3B,wCAAwC;QACxC,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAK;YAC3B,MAAM,WAAW,IAAI;YACrB,SAAS,OAAO,CAAC,SAAS,OAAO,KAAK,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,KAAK,eAAe;;YACrF,SAAS,QAAQ,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;YAC7C,SAAS,UAAU,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;YAE/C,8CAA8C;YAC9C,MAAM,SAAS,SAAS,aAAa,CAAC,QAAQ;YAC9C,IAAI;YAEJ,8CAA8C;YAC9C,MAAM,OAAO,KAAK,MAAM;YACxB,IAAI,OAAO,KAAK;gBACd,sBAAsB;gBACtB,QAAQ,SAAU,KAAK,MAAM,KAAK,CAAC,SAAS,IAAI,EAAG,oBAAoB;;YACzE,OAAO,IAAI,OAAO,MAAM;gBACtB,kCAAkC;gBAClC,QAAQ,SAAU,KAAK,MAAM,KAAK,CAAC,SAAS,IAAI,EAAG,oBAAoB;;YACzE,OAAO;gBACL,oCAAoC;gBACpC,QAAQ,SAAU,KAAK,MAAM,KAAK,CAAC,SAAS,GAAG,EAAG,qBAAqB;;YACzE;YAEA,sCAAsC;YACtC,QAAQ,KAAK,KAAK,CAAC,QAAQ,OAAO;YAElC,IAAI;YACJ,IAAI,SAAS,QAAQ;gBACnB,SAAS;YACX,OAAO,IAAI,SAAS,SAAS,MAAM;gBACjC,SAAS;YACX,OAAO;gBACL,SAAS;YACX;YAEA,KAAK,IAAI,CAAC;gBACR,IAAI,GAAG,SAAS,EAAE,CAAC,CAAC,EAAE,IAAI,GAAG;gBAC7B,YAAY,SAAS,EAAE;gBACvB,UAAU,SAAS,IAAI;gBACvB,SAAS,SAAS,OAAO;gBACzB,WAAW,SAAS,aAAa,CAAC,SAAS;gBAC3C;gBACA,MAAM,SAAS,aAAa,CAAC,IAAI;gBACjC,WAAW;gBACX,MAAM,SAAS,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;gBAC1C,WAAW,SAAS,WAAW;gBAC/B;gBACA,UAAU,GAAG,SAAS,EAAE,CAAC,WAAW,GAAG,CAAC,EAAE,OAAO,IAAI,GAAG,QAAQ,CAAC,GAAG,MAAM;gBAC1E,SAAS,QAAQ,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,SAAS,MAAM,EAAE;YAChE;QACF;IACF;IAEA,OAAO,KAAK,IAAI,CAAC,CAAC,GAAG,IAAM,IAAI,KAAK,EAAE,SAAS,EAAE,OAAO,KAAK,IAAI,KAAK,EAAE,SAAS,EAAE,OAAO;AAC5F;AAEO,MAAM,cAAc;AAGpB,SAAS,gBAAgB,UAAkB;IAChD,OAAO,YAAY,MAAM,CAAC,CAAA,OAAQ,KAAK,UAAU,KAAK;AACxD;AAEO,SAAS,cAAc,OAAe,CAAC;IAC5C,MAAM,aAAa,IAAI;IACvB,WAAW,OAAO,CAAC,WAAW,OAAO,KAAK;IAC1C,OAAO,YAAY,MAAM,CAAC,CAAA,OAAQ,IAAI,KAAK,KAAK,SAAS,KAAK;AAChE;AAEO,SAAS;IACd,OAAO,YAAY,MAAM,CAAC,CAAA,OAAQ,KAAK,MAAM,KAAK,UAAU,KAAK,MAAM,KAAK,WACzE,KAAK,CAAC,GAAG,IAAI,mBAAmB;;AACrC;AAEO,SAAS,iBAAiB,UAAkB;IACjD,MAAM,eAAe,gBAAgB;IACrC,MAAM,QAAQ,aAAa,MAAM;IACjC,MAAM,SAAS,aAAa,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,QAAQ,MAAM;IACnE,MAAM,WAAW,aAAa,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,WAAW,MAAM;IACxE,MAAM,SAAS,aAAa,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,QAAQ,MAAM;IAEnE,OAAO;QACL;QACA;QACA;QACA;QACA,UAAU,QAAQ,IAAI,KAAK,KAAK,CAAC,AAAC,SAAS,QAAS,OAAO;QAC3D,cAAc,QAAQ,IAAI,KAAK,KAAK,CAAC,AAAC,aAAa,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,EAAE,KAAK,EAAE,KAAK,QAAS,OAAO,MAAM;IAClH;AACF","debugId":null}},
    {"offset": {"line": 1246, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/charts/HeatmapChart.tsx"],"sourcesContent":["\"use client\"\n\nimport { useMemo } from 'react'\nimport { QualityData, PROCESSING_LOCATIONS } from '@/lib/data'\n\ninterface HeatmapChartProps {\n  data: QualityData[]\n}\n\nexport default function HeatmapChart({ data }: HeatmapChartProps) {\n  const heatmapData = useMemo(() => {\n    // Group data by location and date\n    const groupedData: { [key: string]: { [key: string]: QualityData[] } } = {}\n    \n    data.forEach(item => {\n      const date = item.date\n      const location = item.location\n      \n      if (!groupedData[location]) {\n        groupedData[location] = {}\n      }\n      if (!groupedData[location][date]) {\n        groupedData[location][date] = []\n      }\n      groupedData[location][date].push(item)\n    })\n\n    // Get unique dates and locations\n    const uniqueDates = [...new Set(data.map(d => d.date))].sort().slice(-14) // Last 14 days\n    const uniqueLocations = PROCESSING_LOCATIONS.map(loc => loc.name)\n\n    // Create heatmap matrix\n    const matrix = uniqueLocations.map(location => {\n      return uniqueDates.map(date => {\n        const locationData = groupedData[location]?.[date] || []\n        let passRate = 0\n        \n        if (locationData.length > 0) {\n          const passCount = locationData.filter(d => d.status === 'PASS').length\n          passRate = Math.round((passCount / locationData.length) * 100)\n        }\n        \n        return {\n          location,\n          date,\n          passRate,\n          sampleCount: locationData.length,\n          status: passRate >= 90 ? 'excellent' : passRate >= 80 ? 'good' : passRate >= 60 ? 'warning' : 'critical'\n        }\n      })\n    })\n\n    return { matrix, uniqueDates, uniqueLocations }\n  }, [data])\n\n  const getColorClass = (passRate: number) => {\n    if (passRate >= 90) return 'bg-green-500'\n    if (passRate >= 80) return 'bg-green-400'\n    if (passRate >= 60) return 'bg-yellow-500'\n    if (passRate >= 40) return 'bg-orange-500'\n    if (passRate > 0) return 'bg-red-500'\n    return 'bg-slate-600'\n  }\n\n  const getIntensity = (passRate: number) => {\n    if (passRate >= 90) return 'opacity-100'\n    if (passRate >= 80) return 'opacity-90'\n    if (passRate >= 60) return 'opacity-80'\n    if (passRate >= 40) return 'opacity-70'\n    if (passRate > 0) return 'opacity-60'\n    return 'opacity-30'\n  }\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"overflow-x-auto\">\n        <div className=\"min-w-[800px]\">\n          {/* Header with dates */}\n          <div className=\"grid grid-cols-[200px_1fr] gap-1 mb-2\">\n            <div className=\"text-slate-400 text-sm font-medium\">Location</div>\n            <div className=\"grid gap-1\" style={{ gridTemplateColumns: `repeat(${heatmapData.uniqueDates.length}, 1fr)` }}>\n              {heatmapData.uniqueDates.map(date => (\n                <div key={date} className=\"text-slate-400 text-xs text-center p-1\">\n                  {new Date(date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Heatmap grid */}\n          <div className=\"space-y-1\">\n            {heatmapData.matrix.map((row, rowIndex) => (\n              <div key={rowIndex} className=\"grid grid-cols-[200px_1fr] gap-1\">\n                <div className=\"text-slate-300 text-sm p-2 bg-slate-700/30 rounded flex items-center\">\n                  <span className=\"truncate\" title={heatmapData.uniqueLocations[rowIndex]}>\n                    {heatmapData.uniqueLocations[rowIndex].length > 25 \n                      ? heatmapData.uniqueLocations[rowIndex].substring(0, 25) + '...'\n                      : heatmapData.uniqueLocations[rowIndex]\n                    }\n                  </span>\n                </div>\n                <div className=\"grid gap-1\" style={{ gridTemplateColumns: `repeat(${heatmapData.uniqueDates.length}, 1fr)` }}>\n                  {row.map((cell, cellIndex) => (\n                    <div\n                      key={cellIndex}\n                      className={`\n                        h-12 rounded cursor-pointer transition-all duration-200 hover:scale-105 hover:z-10 relative\n                        ${getColorClass(cell.passRate)} ${getIntensity(cell.passRate)}\n                        ${cell.sampleCount === 0 ? 'bg-slate-600 opacity-30' : ''}\n                      `}\n                      title={`${cell.location}\\nDate: ${new Date(cell.date).toLocaleDateString()}\\nPass Rate: ${cell.passRate}%\\nSamples: ${cell.sampleCount}`}\n                    >\n                      {cell.sampleCount > 0 && (\n                        <div className=\"absolute inset-0 flex items-center justify-center\">\n                          <span className=\"text-white text-xs font-medium\">\n                            {cell.passRate}%\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Legend */}\n      <div className=\"mt-6 flex items-center justify-center space-x-6 text-sm text-slate-400\">\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"w-4 h-4 bg-red-500 rounded\"></div>\n          <span>0-40% Pass Rate</span>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"w-4 h-4 bg-orange-500 rounded\"></div>\n          <span>40-60% Pass Rate</span>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"w-4 h-4 bg-yellow-500 rounded\"></div>\n          <span>60-80% Pass Rate</span>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"w-4 h-4 bg-green-400 rounded\"></div>\n          <span>80-90% Pass Rate</span>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"w-4 h-4 bg-green-500 rounded\"></div>\n          <span>90-100% Pass Rate</span>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"w-4 h-4 bg-slate-600 opacity-30 rounded\"></div>\n          <span>No Data</span>\n        </div>\n      </div>\n\n      {/* Summary Stats */}\n      <div className=\"mt-4 grid grid-cols-2 md:grid-cols-4 gap-4 text-center\">\n        <div className=\"bg-slate-700/30 rounded-lg p-3\">\n          <div className=\"text-green-400 text-lg font-bold\">\n            {heatmapData.matrix.flat().filter(cell => cell.passRate >= 90).length}\n          </div>\n          <div className=\"text-slate-400 text-xs\">Excellent Days</div>\n        </div>\n        <div className=\"bg-slate-700/30 rounded-lg p-3\">\n          <div className=\"text-yellow-400 text-lg font-bold\">\n            {heatmapData.matrix.flat().filter(cell => cell.passRate >= 60 && cell.passRate < 90).length}\n          </div>\n          <div className=\"text-slate-400 text-xs\">Warning Days</div>\n        </div>\n        <div className=\"bg-slate-700/30 rounded-lg p-3\">\n          <div className=\"text-red-400 text-lg font-bold\">\n            {heatmapData.matrix.flat().filter(cell => cell.passRate > 0 && cell.passRate < 60).length}\n          </div>\n          <div className=\"text-slate-400 text-xs\">Critical Days</div>\n        </div>\n        <div className=\"bg-slate-700/30 rounded-lg p-3\">\n          <div className=\"text-slate-400 text-lg font-bold\">\n            {heatmapData.matrix.flat().filter(cell => cell.sampleCount === 0).length}\n          </div>\n          <div className=\"text-slate-400 text-xs\">No Data Days</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1740, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE;KArBS","debugId":null}},
    {"offset": {"line": 1785, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/charts/QualityMetrics.tsx"],"sourcesContent":["\"use client\"\n\nimport { useMemo } from 'react'\nimport { QualityData, PROCESSING_LOCATIONS } from '@/lib/data'\nimport { Progress } from '@/components/ui/progress'\nimport { Badge } from '@/components/ui/badge'\n\ninterface QualityMetricsProps {\n  data: QualityData[]\n}\n\nexport default function QualityMetrics({ data }: QualityMetricsProps) {\n  const metrics = useMemo(() => {\n    return PROCESSING_LOCATIONS.map(location => {\n      const locationData = data.filter(d => d.locationId === location.id)\n      const total = locationData.length\n      const passed = locationData.filter(d => d.status === 'PASS').length\n      const warnings = locationData.filter(d => d.status === 'WARNING').length\n      const failed = locationData.filter(d => d.status === 'FAIL').length\n      \n      const passRate = total > 0 ? Math.round((passed / total) * 100) : 0\n      const averageValue = total > 0 \n        ? Math.round((locationData.reduce((sum, d) => sum + d.value, 0) / total) * 100) / 100 \n        : 0\n\n      const sortedData = locationData.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime())\n      const recent = sortedData.slice(0, Math.floor(sortedData.length / 2))\n      const previous = sortedData.slice(Math.floor(sortedData.length / 2))\n      \n      const recentPassRate = recent.length > 0 \n        ? Math.round((recent.filter(d => d.status === 'PASS').length / recent.length) * 100) \n        : 0\n      const previousPassRate = previous.length > 0 \n        ? Math.round((previous.filter(d => d.status === 'PASS').length / previous.length) * 100) \n        : 0\n      \n      const trend = recentPassRate - previousPassRate\n\n      return {\n        ...location,\n        total,\n        passed,\n        warnings,\n        failed,\n        passRate,\n        averageValue,\n        trend,\n        status: passRate >= 90 ? 'excellent' : passRate >= 80 ? 'good' : passRate >= 60 ? 'warning' : 'critical'\n      }\n    })\n  }, [data])\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'excellent': return 'bg-green-600'\n      case 'good': return 'bg-green-500'\n      case 'warning': return 'bg-yellow-500'\n      case 'critical': return 'bg-red-500'\n      default: return 'bg-slate-500'\n    }\n  }\n\n  const getTrendIcon = (trend: number) => {\n    if (trend > 5) return '📈'\n    if (trend < -5) return '📉'\n    return '➡️'\n  }\n\n  const getTrendColor = (trend: number) => {\n    if (trend > 5) return 'text-green-400'\n    if (trend < -5) return 'text-red-400'\n    return 'text-slate-400'\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {metrics.map((metric) => (\n        <div\n          key={metric.id}\n          className=\"p-4 bg-slate-700/30 rounded-lg border border-slate-600\"\n        >\n          <div className=\"flex items-center justify-between mb-3\">\n            <div className=\"flex-1\">\n              <h3 className=\"text-white font-medium text-sm\">\n                {metric.name}\n              </h3>\n              <p className=\"text-slate-400 text-xs\">{metric.product}</p>\n            </div>\n            <Badge className={`${getStatusColor(metric.status)} text-white text-xs`}>\n              {metric.passRate}%\n            </Badge>\n          </div>\n\n          <div className=\"mb-3\">\n            <Progress value={metric.passRate} className=\"h-2 bg-slate-600\" />\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-3 text-xs\">\n            <div>\n              <div className=\"flex justify-between text-slate-300\">\n                <span>Samples:</span>\n                <span className=\"font-medium\">{metric.total}</span>\n              </div>\n              <div className=\"flex justify-between text-green-400\">\n                <span>Passed:</span>\n                <span className=\"font-medium\">{metric.passed}</span>\n              </div>\n              <div className=\"flex justify-between text-yellow-400\">\n                <span>Warnings:</span>\n                <span className=\"font-medium\">{metric.warnings}</span>\n              </div>\n              <div className=\"flex justify-between text-red-400\">\n                <span>Failed:</span>\n                <span className=\"font-medium\">{metric.failed}</span>\n              </div>\n            </div>\n            <div>\n              <div className=\"flex justify-between text-slate-300\">\n                <span>Avg Value:</span>\n                <span className=\"font-medium\">\n                  {metric.averageValue}{metric.targetQuality.unit}\n                </span>\n              </div>\n              <div className=\"flex justify-between text-slate-300\">\n                <span>Target:</span>\n                <span className=\"font-medium\">\n                  ≥{metric.targetQuality.minValue}{metric.targetQuality.unit}\n                </span>\n              </div>\n              <div className={`flex justify-between ${getTrendColor(metric.trend)}`}>\n                <span>Trend:</span>\n                <span className=\"font-medium\">\n                  {getTrendIcon(metric.trend)} {metric.trend > 0 ? '+' : ''}{metric.trend}%\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2172, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/dashboard/DashboardOverview.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { PROCESSING_LOCATIONS, SAMPLE_DATA, getLocationStats, getRecentData, getAlerts } from '@/lib/data'\nimport HeatmapChart from '@/components/charts/HeatmapChart'\nimport QualityMetrics from '@/components/charts/QualityMetrics'\n\nexport default function DashboardOverview() {\n  const [selectedTimeRange, setSelectedTimeRange] = useState('7')\n  const [recentData, setRecentData] = useState(getRecentData(7))\n  const [alerts, setAlerts] = useState(getAlerts())\n\n  useEffect(() => {\n    setRecentData(getRecentData(parseInt(selectedTimeRange)))\n  }, [selectedTimeRange])\n\n  // Calculate overall statistics\n  const totalSamples = recentData.length\n  const passedSamples = recentData.filter(d => d.status === 'PASS').length\n  const warningSamples = recentData.filter(d => d.status === 'WARNING').length\n  const failedSamples = recentData.filter(d => d.status === 'FAIL').length\n  const overallPassRate = totalSamples > 0 ? Math.round((passedSamples / totalSamples) * 100) : 0\n\n  // Get location statistics\n  const locationStats = PROCESSING_LOCATIONS.map(location => ({\n    ...location,\n    stats: getLocationStats(location.id)\n  }))\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header Controls */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-white\">Quality Overview</h1>\n          <p className=\"text-slate-400\">Real-time monitoring of all processing locations</p>\n        </div>\n        <div className=\"flex items-center space-x-4\">\n          <Select value={selectedTimeRange} onValueChange={setSelectedTimeRange}>\n            <SelectTrigger className=\"w-40 bg-slate-800 border-slate-700 text-white\">\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent className=\"bg-slate-800 border-slate-700\">\n              <SelectItem value=\"1\">Last 24 Hours</SelectItem>\n              <SelectItem value=\"7\">Last 7 Days</SelectItem>\n              <SelectItem value=\"30\">Last 30 Days</SelectItem>\n            </SelectContent>\n          </Select>\n          <Button \n            onClick={() => window.location.reload()} \n            className=\"bg-orange-600 hover:bg-orange-700\"\n          >\n            Refresh Data\n          </Button>\n        </div>\n      </div>\n\n      {/* Key Metrics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <Card className=\"bg-slate-800 border-slate-700\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-slate-400\">Total Samples</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-white\">{totalSamples}</div>\n            <p className=\"text-xs text-slate-400\">Last {selectedTimeRange} days</p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-slate-800 border-slate-700\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-slate-400\">Pass Rate</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-green-400\">{overallPassRate}%</div>\n            <p className=\"text-xs text-slate-400\">{passedSamples} passed samples</p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-slate-800 border-slate-700\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-slate-400\">Warnings</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-yellow-400\">{warningSamples}</div>\n            <p className=\"text-xs text-slate-400\">Samples below target</p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-slate-800 border-slate-700\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-slate-400\">Failures</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-red-400\">{failedSamples}</div>\n            <p className=\"text-xs text-slate-400\">Critical quality issues</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Heatmap and Quality Metrics */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <Card className=\"lg:col-span-2 bg-slate-800 border-slate-700\">\n          <CardHeader>\n            <CardTitle className=\"text-white\">Process Quality Heatmap</CardTitle>\n            <CardDescription className=\"text-slate-400\">\n              Visual representation of quality levels across all processing locations\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <HeatmapChart data={recentData} />\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-slate-800 border-slate-700\">\n          <CardHeader>\n            <CardTitle className=\"text-white\">Quality Metrics</CardTitle>\n            <CardDescription className=\"text-slate-400\">\n              Performance indicators by location\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <QualityMetrics data={recentData} />\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Location Status Grid */}\n      <Card className=\"bg-slate-800 border-slate-700\">\n        <CardHeader>\n          <CardTitle className=\"text-white\">Processing Locations Status</CardTitle>\n          <CardDescription className=\"text-slate-400\">\n            Current status and performance of all processing locations\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {locationStats.map((location) => (\n              <div\n                key={location.id}\n                className=\"p-4 bg-slate-700/50 rounded-lg border border-slate-600\"\n              >\n                <div className=\"flex items-center justify-between mb-2\">\n                  <h3 className=\"font-medium text-white text-sm\">{location.name}</h3>\n                  <Badge\n                    variant={\n                      location.stats.passRate >= 90 ? 'default' :\n                      location.stats.passRate >= 80 ? 'secondary' : 'destructive'\n                    }\n                    className={\n                      location.stats.passRate >= 90 ? 'bg-green-600' :\n                      location.stats.passRate >= 80 ? 'bg-yellow-600' : 'bg-red-600'\n                    }\n                  >\n                    {location.stats.passRate}%\n                  </Badge>\n                </div>\n                <p className=\"text-xs text-slate-400 mb-2\">{location.product}</p>\n                <div className=\"space-y-1 text-xs\">\n                  <div className=\"flex justify-between text-slate-300\">\n                    <span>Samples:</span>\n                    <span>{location.stats.total}</span>\n                  </div>\n                  <div className=\"flex justify-between text-green-400\">\n                    <span>Passed:</span>\n                    <span>{location.stats.passed}</span>\n                  </div>\n                  <div className=\"flex justify-between text-yellow-400\">\n                    <span>Warnings:</span>\n                    <span>{location.stats.warnings}</span>\n                  </div>\n                  <div className=\"flex justify-between text-red-400\">\n                    <span>Failed:</span>\n                    <span>{location.stats.failed}</span>\n                  </div>\n                  <div className=\"flex justify-between text-slate-300 pt-1 border-t border-slate-600\">\n                    <span>Avg Value:</span>\n                    <span>{location.stats.averageValue}{location.targetQuality.unit}</span>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Recent Alerts */}\n      <Card className=\"bg-slate-800 border-slate-700\">\n        <CardHeader>\n          <CardTitle className=\"text-white\">Recent Alerts</CardTitle>\n          <CardDescription className=\"text-slate-400\">\n            Latest quality issues requiring attention\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-3\">\n            {alerts.slice(0, 5).map((alert) => (\n              <div\n                key={alert.id}\n                className=\"flex items-center justify-between p-3 bg-slate-700/30 rounded-lg border border-slate-600\"\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <Badge\n                    variant={alert.status === 'FAIL' ? 'destructive' : 'secondary'}\n                    className={alert.status === 'FAIL' ? 'bg-red-600' : 'bg-yellow-600'}\n                  >\n                    {alert.status}\n                  </Badge>\n                  <div>\n                    <p className=\"text-white font-medium text-sm\">{alert.location}</p>\n                    <p className=\"text-slate-400 text-xs\">{alert.product}</p>\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"text-white font-medium\">\n                    {alert.value}{alert.unit}\n                  </p>\n                  <p className=\"text-slate-400 text-xs\">\n                    Target: ≥{alert.targetMin}{alert.unit}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3007, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,6LAAC;YACC,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;KAbS;AAeT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 3145, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/dashboard/DashboardReports.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useMemo } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Input } from '@/components/ui/input'\nimport { Badge } from '@/components/ui/badge'\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table'\nimport { PROCESSING_LOCATIONS, SAMPLE_DATA, QualityData } from '@/lib/data'\n\nexport default function DashboardReports() {\n  const [selectedLocation, setSelectedLocation] = useState<string>('all')\n  const [selectedProduct, setSelectedProduct] = useState<string>('all')\n  const [dateRange, setDateRange] = useState<string>('7')\n  const [searchTerm, setSearchTerm] = useState('')\n\n  const filteredData = useMemo(() => {\n    let filtered = SAMPLE_DATA\n\n    // Filter by location\n    if (selectedLocation !== 'all') {\n      filtered = filtered.filter(d => d.locationId === selectedLocation)\n    }\n\n    // Filter by product\n    if (selectedProduct !== 'all') {\n      filtered = filtered.filter(d => d.product === selectedProduct)\n    }\n\n    // Filter by date range\n    const cutoffDate = new Date()\n    cutoffDate.setDate(cutoffDate.getDate() - parseInt(dateRange))\n    filtered = filtered.filter(d => new Date(d.timestamp) >= cutoffDate)\n\n    // Filter by search term\n    if (searchTerm) {\n      filtered = filtered.filter(d => \n        d.location.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        d.product.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        d.sampleId.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        d.analyst.toLowerCase().includes(searchTerm.toLowerCase())\n      )\n    }\n\n    return filtered.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime())\n  }, [selectedLocation, selectedProduct, dateRange, searchTerm])\n\n  const reportStats = useMemo(() => {\n    const total = filteredData.length\n    const passed = filteredData.filter(d => d.status === 'PASS').length\n    const warnings = filteredData.filter(d => d.status === 'WARNING').length\n    const failed = filteredData.filter(d => d.status === 'FAIL').length\n    const passRate = total > 0 ? Math.round((passed / total) * 100) : 0\n\n    // Group by location for location stats\n    const locationStats = PROCESSING_LOCATIONS.map(location => {\n      const locationData = filteredData.filter(d => d.locationId === location.id)\n      const locationTotal = locationData.length\n      const locationPassed = locationData.filter(d => d.status === 'PASS').length\n      const locationPassRate = locationTotal > 0 ? Math.round((locationPassed / locationTotal) * 100) : 0\n      \n      return {\n        ...location,\n        total: locationTotal,\n        passed: locationPassed,\n        passRate: locationPassRate,\n        averageValue: locationTotal > 0 \n          ? Math.round((locationData.reduce((sum, d) => sum + d.value, 0) / locationTotal) * 100) / 100 \n          : 0\n      }\n    }).filter(stat => stat.total > 0)\n\n    return {\n      total,\n      passed,\n      warnings,\n      failed,\n      passRate,\n      locationStats\n    }\n  }, [filteredData])\n\n  const uniqueProducts = [...new Set(SAMPLE_DATA.map(d => d.product))]\n\n  const getStatusBadge = (status: string) => {\n    const variants = {\n      'PASS': 'bg-green-600',\n      'WARNING': 'bg-yellow-600',\n      'FAIL': 'bg-red-600'\n    }\n    return variants[status as keyof typeof variants] || 'bg-slate-600'\n  }\n\n  const exportData = () => {\n    const csvContent = [\n      ['Sample ID', 'Location', 'Product', 'Parameter', 'Value', 'Unit', 'Target Min', 'Status', 'Date', 'Analyst'].join(','),\n      ...filteredData.map(d => [\n        d.sampleId,\n        d.location,\n        d.product,\n        d.parameter,\n        d.value,\n        d.unit,\n        d.targetMin,\n        d.status,\n        d.date,\n        d.analyst\n      ].join(','))\n    ].join('\\n')\n\n    const blob = new Blob([csvContent], { type: 'text/csv' })\n    const url = window.URL.createObjectURL(blob)\n    const a = document.createElement('a')\n    a.href = url\n    a.download = `quality_report_${new Date().toISOString().split('T')[0]}.csv`\n    a.click()\n    window.URL.revokeObjectURL(url)\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-white\">Quality Reports</h1>\n          <p className=\"text-slate-400\">Detailed analysis and reporting of quality data</p>\n        </div>\n        <Button onClick={exportData} className=\"bg-orange-600 hover:bg-orange-700\">\n          Export CSV\n        </Button>\n      </div>\n\n      {/* Filters */}\n      <Card className=\"bg-slate-800 border-slate-700\">\n        <CardHeader>\n          <CardTitle className=\"text-white\">Filters</CardTitle>\n          <CardDescription className=\"text-slate-400\">\n            Filter data by location, product, date range, and search terms\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <div>\n              <label className=\"text-sm font-medium text-slate-300 mb-2 block\">Location</label>\n              <Select value={selectedLocation} onValueChange={setSelectedLocation}>\n                <SelectTrigger className=\"bg-slate-700 border-slate-600 text-white\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent className=\"bg-slate-800 border-slate-700\">\n                  <SelectItem value=\"all\">All Locations</SelectItem>\n                  {PROCESSING_LOCATIONS.map(location => (\n                    <SelectItem key={location.id} value={location.id}>\n                      {location.name}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium text-slate-300 mb-2 block\">Product</label>\n              <Select value={selectedProduct} onValueChange={setSelectedProduct}>\n                <SelectTrigger className=\"bg-slate-700 border-slate-600 text-white\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent className=\"bg-slate-800 border-slate-700\">\n                  <SelectItem value=\"all\">All Products</SelectItem>\n                  {uniqueProducts.map(product => (\n                    <SelectItem key={product} value={product}>\n                      {product}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium text-slate-300 mb-2 block\">Date Range</label>\n              <Select value={dateRange} onValueChange={setDateRange}>\n                <SelectTrigger className=\"bg-slate-700 border-slate-600 text-white\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent className=\"bg-slate-800 border-slate-700\">\n                  <SelectItem value=\"1\">Last 24 Hours</SelectItem>\n                  <SelectItem value=\"7\">Last 7 Days</SelectItem>\n                  <SelectItem value=\"30\">Last 30 Days</SelectItem>\n                  <SelectItem value=\"90\">Last 90 Days</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium text-slate-300 mb-2 block\">Search</label>\n              <Input\n                placeholder=\"Search samples...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"bg-slate-700 border-slate-600 text-white placeholder:text-slate-400\"\n              />\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Statistics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <Card className=\"bg-slate-800 border-slate-700\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-slate-400\">Total Samples</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-white\">{reportStats.total}</div>\n            <p className=\"text-xs text-slate-400\">Filtered results</p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-slate-800 border-slate-700\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-slate-400\">Pass Rate</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-green-400\">{reportStats.passRate}%</div>\n            <p className=\"text-xs text-slate-400\">{reportStats.passed} passed samples</p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-slate-800 border-slate-700\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-slate-400\">Warnings</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-yellow-400\">{reportStats.warnings}</div>\n            <p className=\"text-xs text-slate-400\">Samples below target</p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-slate-800 border-slate-700\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-slate-400\">Failures</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-red-400\">{reportStats.failed}</div>\n            <p className=\"text-xs text-slate-400\">Critical quality issues</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Location Performance */}\n      {reportStats.locationStats.length > 0 && (\n        <Card className=\"bg-slate-800 border-slate-700\">\n          <CardHeader>\n            <CardTitle className=\"text-white\">Location Performance</CardTitle>\n            <CardDescription className=\"text-slate-400\">\n              Performance summary by processing location\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {reportStats.locationStats.map(stat => (\n                <div key={stat.id} className=\"p-4 bg-slate-700/30 rounded-lg border border-slate-600\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <h3 className=\"font-medium text-white text-sm\">\n                      {stat.name.length > 20 ? stat.name.substring(0, 20) + '...' : stat.name}\n                    </h3>\n                    <Badge className={`${stat.passRate >= 90 ? 'bg-green-600' : stat.passRate >= 80 ? 'bg-yellow-600' : 'bg-red-600'} text-white`}>\n                      {stat.passRate}%\n                    </Badge>\n                  </div>\n                  <div className=\"space-y-1 text-xs text-slate-300\">\n                    <div className=\"flex justify-between\">\n                      <span>Samples:</span>\n                      <span>{stat.total}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Passed:</span>\n                      <span className=\"text-green-400\">{stat.passed}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Avg Value:</span>\n                      <span>{stat.averageValue}{stat.targetQuality.unit}</span>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Data Table */}\n      <Card className=\"bg-slate-800 border-slate-700\">\n        <CardHeader>\n          <CardTitle className=\"text-white\">Sample Data</CardTitle>\n          <CardDescription className=\"text-slate-400\">\n            Detailed view of all quality samples ({filteredData.length} results)\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"overflow-x-auto\">\n            <Table>\n              <TableHeader>\n                <TableRow className=\"border-slate-700\">\n                  <TableHead className=\"text-slate-300\">Sample ID</TableHead>\n                  <TableHead className=\"text-slate-300\">Location</TableHead>\n                  <TableHead className=\"text-slate-300\">Product</TableHead>\n                  <TableHead className=\"text-slate-300\">Value</TableHead>\n                  <TableHead className=\"text-slate-300\">Target</TableHead>\n                  <TableHead className=\"text-slate-300\">Status</TableHead>\n                  <TableHead className=\"text-slate-300\">Date</TableHead>\n                  <TableHead className=\"text-slate-300\">Analyst</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {filteredData.slice(0, 50).map((sample) => (\n                  <TableRow key={sample.id} className=\"border-slate-700 hover:bg-slate-700/30\">\n                    <TableCell className=\"text-slate-300 font-mono text-sm\">\n                      {sample.sampleId}\n                    </TableCell>\n                    <TableCell className=\"text-slate-300 text-sm\">\n                      {sample.location.length > 25 ? sample.location.substring(0, 25) + '...' : sample.location}\n                    </TableCell>\n                    <TableCell className=\"text-slate-300 text-sm\">\n                      {sample.product}\n                    </TableCell>\n                    <TableCell className=\"text-slate-300 font-medium\">\n                      {sample.value}{sample.unit}\n                    </TableCell>\n                    <TableCell className=\"text-slate-400 text-sm\">\n                      ≥{sample.targetMin}{sample.unit}\n                    </TableCell>\n                    <TableCell>\n                      <Badge className={`${getStatusBadge(sample.status)} text-white text-xs`}>\n                        {sample.status}\n                      </Badge>\n                    </TableCell>\n                    <TableCell className=\"text-slate-300 text-sm\">\n                      {new Date(sample.date).toLocaleDateString()}\n                    </TableCell>\n                    <TableCell className=\"text-slate-300 text-sm\">\n                      {sample.analyst}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n            {filteredData.length > 50 && (\n              <div className=\"mt-4 text-center text-slate-400 text-sm\">\n                Showing first 50 of {filteredData.length} results\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AATA;;;;;;;;;AAWe,SAAS;;IACtB,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACjE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAC/D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACnD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;kDAAE;YAC3B,IAAI,WAAW,qHAAA,CAAA,cAAW;YAE1B,qBAAqB;YACrB,IAAI,qBAAqB,OAAO;gBAC9B,WAAW,SAAS,MAAM;8DAAC,CAAA,IAAK,EAAE,UAAU,KAAK;;YACnD;YAEA,oBAAoB;YACpB,IAAI,oBAAoB,OAAO;gBAC7B,WAAW,SAAS,MAAM;8DAAC,CAAA,IAAK,EAAE,OAAO,KAAK;;YAChD;YAEA,uBAAuB;YACvB,MAAM,aAAa,IAAI;YACvB,WAAW,OAAO,CAAC,WAAW,OAAO,KAAK,SAAS;YACnD,WAAW,SAAS,MAAM;0DAAC,CAAA,IAAK,IAAI,KAAK,EAAE,SAAS,KAAK;;YAEzD,wBAAwB;YACxB,IAAI,YAAY;gBACd,WAAW,SAAS,MAAM;8DAAC,CAAA,IACzB,EAAE,QAAQ,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW,OACxD,EAAE,OAAO,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW,OACvD,EAAE,QAAQ,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW,OACxD,EAAE,OAAO,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW;;YAE3D;YAEA,OAAO,SAAS,IAAI;0DAAC,CAAC,GAAG,IAAM,IAAI,KAAK,EAAE,SAAS,EAAE,OAAO,KAAK,IAAI,KAAK,EAAE,SAAS,EAAE,OAAO;;QAChG;iDAAG;QAAC;QAAkB;QAAiB;QAAW;KAAW;IAE7D,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;iDAAE;YAC1B,MAAM,QAAQ,aAAa,MAAM;YACjC,MAAM,SAAS,aAAa,MAAM;yDAAC,CAAA,IAAK,EAAE,MAAM,KAAK;wDAAQ,MAAM;YACnE,MAAM,WAAW,aAAa,MAAM;yDAAC,CAAA,IAAK,EAAE,MAAM,KAAK;wDAAW,MAAM;YACxE,MAAM,SAAS,aAAa,MAAM;yDAAC,CAAA,IAAK,EAAE,MAAM,KAAK;wDAAQ,MAAM;YACnE,MAAM,WAAW,QAAQ,IAAI,KAAK,KAAK,CAAC,AAAC,SAAS,QAAS,OAAO;YAElE,uCAAuC;YACvC,MAAM,gBAAgB,qHAAA,CAAA,uBAAoB,CAAC,GAAG;uEAAC,CAAA;oBAC7C,MAAM,eAAe,aAAa,MAAM;4FAAC,CAAA,IAAK,EAAE,UAAU,KAAK,SAAS,EAAE;;oBAC1E,MAAM,gBAAgB,aAAa,MAAM;oBACzC,MAAM,iBAAiB,aAAa,MAAM;+EAAC,CAAA,IAAK,EAAE,MAAM,KAAK;8EAAQ,MAAM;oBAC3E,MAAM,mBAAmB,gBAAgB,IAAI,KAAK,KAAK,CAAC,AAAC,iBAAiB,gBAAiB,OAAO;oBAElG,OAAO;wBACL,GAAG,QAAQ;wBACX,OAAO;wBACP,QAAQ;wBACR,UAAU;wBACV,cAAc,gBAAgB,IAC1B,KAAK,KAAK,CAAC,AAAC,aAAa,MAAM;mFAAC,CAAC,KAAK,IAAM,MAAM,EAAE,KAAK;kFAAE,KAAK,gBAAiB,OAAO,MACxF;oBACN;gBACF;sEAAG,MAAM;uEAAC,CAAA,OAAQ,KAAK,KAAK,GAAG;;YAE/B,OAAO;gBACL;gBACA;gBACA;gBACA;gBACA;gBACA;YACF;QACF;gDAAG;QAAC;KAAa;IAEjB,MAAM,iBAAiB;WAAI,IAAI,IAAI,qHAAA,CAAA,cAAW,CAAC,GAAG,CAAC,CAAA,IAAK,EAAE,OAAO;KAAG;IAEpE,MAAM,iBAAiB,CAAC;QACtB,MAAM,WAAW;YACf,QAAQ;YACR,WAAW;YACX,QAAQ;QACV;QACA,OAAO,QAAQ,CAAC,OAAgC,IAAI;IACtD;IAEA,MAAM,aAAa;QACjB,MAAM,aAAa;YACjB;gBAAC;gBAAa;gBAAY;gBAAW;gBAAa;gBAAS;gBAAQ;gBAAc;gBAAU;gBAAQ;aAAU,CAAC,IAAI,CAAC;eAChH,aAAa,GAAG,CAAC,CAAA,IAAK;oBACvB,EAAE,QAAQ;oBACV,EAAE,QAAQ;oBACV,EAAE,OAAO;oBACT,EAAE,SAAS;oBACX,EAAE,KAAK;oBACP,EAAE,IAAI;oBACN,EAAE,SAAS;oBACX,EAAE,MAAM;oBACR,EAAE,IAAI;oBACN,EAAE,OAAO;iBACV,CAAC,IAAI,CAAC;SACR,CAAC,IAAI,CAAC;QAEP,MAAM,OAAO,IAAI,KAAK;YAAC;SAAW,EAAE;YAAE,MAAM;QAAW;QACvD,MAAM,MAAM,OAAO,GAAG,CAAC,eAAe,CAAC;QACvC,MAAM,IAAI,SAAS,aAAa,CAAC;QACjC,EAAE,IAAI,GAAG;QACT,EAAE,QAAQ,GAAG,CAAC,eAAe,EAAE,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;QAC3E,EAAE,KAAK;QACP,OAAO,GAAG,CAAC,eAAe,CAAC;IAC7B;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;;0CACC,6LAAC;gCAAG,WAAU;0CAAgC;;;;;;0CAC9C,6LAAC;gCAAE,WAAU;0CAAiB;;;;;;;;;;;;kCAEhC,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAS;wBAAY,WAAU;kCAAoC;;;;;;;;;;;;0BAM7E,6LAAC,mIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,6LAAC,mIAAA,CAAA,aAAU;;0CACT,6LAAC,mIAAA,CAAA,YAAS;gCAAC,WAAU;0CAAa;;;;;;0CAClC,6LAAC,mIAAA,CAAA,kBAAe;gCAAC,WAAU;0CAAiB;;;;;;;;;;;;kCAI9C,6LAAC,mIAAA,CAAA,cAAW;kCACV,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAAgD;;;;;;sDACjE,6LAAC,qIAAA,CAAA,SAAM;4CAAC,OAAO;4CAAkB,eAAe;;8DAC9C,6LAAC,qIAAA,CAAA,gBAAa;oDAAC,WAAU;8DACvB,cAAA,6LAAC,qIAAA,CAAA,cAAW;;;;;;;;;;8DAEd,6LAAC,qIAAA,CAAA,gBAAa;oDAAC,WAAU;;sEACvB,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAM;;;;;;wDACvB,qHAAA,CAAA,uBAAoB,CAAC,GAAG,CAAC,CAAA,yBACxB,6LAAC,qIAAA,CAAA,aAAU;gEAAmB,OAAO,SAAS,EAAE;0EAC7C,SAAS,IAAI;+DADC,SAAS,EAAE;;;;;;;;;;;;;;;;;;;;;;;8CAQpC,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAAgD;;;;;;sDACjE,6LAAC,qIAAA,CAAA,SAAM;4CAAC,OAAO;4CAAiB,eAAe;;8DAC7C,6LAAC,qIAAA,CAAA,gBAAa;oDAAC,WAAU;8DACvB,cAAA,6LAAC,qIAAA,CAAA,cAAW;;;;;;;;;;8DAEd,6LAAC,qIAAA,CAAA,gBAAa;oDAAC,WAAU;;sEACvB,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAM;;;;;;wDACvB,eAAe,GAAG,CAAC,CAAA,wBAClB,6LAAC,qIAAA,CAAA,aAAU;gEAAe,OAAO;0EAC9B;+DADc;;;;;;;;;;;;;;;;;;;;;;;8CAQzB,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAAgD;;;;;;sDACjE,6LAAC,qIAAA,CAAA,SAAM;4CAAC,OAAO;4CAAW,eAAe;;8DACvC,6LAAC,qIAAA,CAAA,gBAAa;oDAAC,WAAU;8DACvB,cAAA,6LAAC,qIAAA,CAAA,cAAW;;;;;;;;;;8DAEd,6LAAC,qIAAA,CAAA,gBAAa;oDAAC,WAAU;;sEACvB,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAI;;;;;;sEACtB,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAI;;;;;;sEACtB,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAK;;;;;;sEACvB,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAK;;;;;;;;;;;;;;;;;;;;;;;;8CAK7B,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAAgD;;;;;;sDACjE,6LAAC,oIAAA,CAAA,QAAK;4CACJ,aAAY;4CACZ,OAAO;4CACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;4CAC7C,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQpB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,mIAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,6LAAC,mIAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,6LAAC,mIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAqC;;;;;;;;;;;0CAE5D,6LAAC,mIAAA,CAAA,cAAW;;kDACV,6LAAC;wCAAI,WAAU;kDAAiC,YAAY,KAAK;;;;;;kDACjE,6LAAC;wCAAE,WAAU;kDAAyB;;;;;;;;;;;;;;;;;;kCAI1C,6LAAC,mIAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,6LAAC,mIAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,6LAAC,mIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAqC;;;;;;;;;;;0CAE5D,6LAAC,mIAAA,CAAA,cAAW;;kDACV,6LAAC;wCAAI,WAAU;;4CAAqC,YAAY,QAAQ;4CAAC;;;;;;;kDACzE,6LAAC;wCAAE,WAAU;;4CAA0B,YAAY,MAAM;4CAAC;;;;;;;;;;;;;;;;;;;kCAI9D,6LAAC,mIAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,6LAAC,mIAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,6LAAC,mIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAqC;;;;;;;;;;;0CAE5D,6LAAC,mIAAA,CAAA,cAAW;;kDACV,6LAAC;wCAAI,WAAU;kDAAsC,YAAY,QAAQ;;;;;;kDACzE,6LAAC;wCAAE,WAAU;kDAAyB;;;;;;;;;;;;;;;;;;kCAI1C,6LAAC,mIAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,6LAAC,mIAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,6LAAC,mIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAqC;;;;;;;;;;;0CAE5D,6LAAC,mIAAA,CAAA,cAAW;;kDACV,6LAAC;wCAAI,WAAU;kDAAmC,YAAY,MAAM;;;;;;kDACpE,6LAAC;wCAAE,WAAU;kDAAyB;;;;;;;;;;;;;;;;;;;;;;;;YAM3C,YAAY,aAAa,CAAC,MAAM,GAAG,mBAClC,6LAAC,mIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,6LAAC,mIAAA,CAAA,aAAU;;0CACT,6LAAC,mIAAA,CAAA,YAAS;gCAAC,WAAU;0CAAa;;;;;;0CAClC,6LAAC,mIAAA,CAAA,kBAAe;gCAAC,WAAU;0CAAiB;;;;;;;;;;;;kCAI9C,6LAAC,mIAAA,CAAA,cAAW;kCACV,cAAA,6LAAC;4BAAI,WAAU;sCACZ,YAAY,aAAa,CAAC,GAAG,CAAC,CAAA,qBAC7B,6LAAC;oCAAkB,WAAU;;sDAC3B,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAG,WAAU;8DACX,KAAK,IAAI,CAAC,MAAM,GAAG,KAAK,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,MAAM,QAAQ,KAAK,IAAI;;;;;;8DAEzE,6LAAC,oIAAA,CAAA,QAAK;oDAAC,WAAW,GAAG,KAAK,QAAQ,IAAI,KAAK,iBAAiB,KAAK,QAAQ,IAAI,KAAK,kBAAkB,aAAa,WAAW,CAAC;;wDAC1H,KAAK,QAAQ;wDAAC;;;;;;;;;;;;;sDAGnB,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;sEAAK;;;;;;sEACN,6LAAC;sEAAM,KAAK,KAAK;;;;;;;;;;;;8DAEnB,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;sEAAK;;;;;;sEACN,6LAAC;4DAAK,WAAU;sEAAkB,KAAK,MAAM;;;;;;;;;;;;8DAE/C,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;sEAAK;;;;;;sEACN,6LAAC;;gEAAM,KAAK,YAAY;gEAAE,KAAK,aAAa,CAAC,IAAI;;;;;;;;;;;;;;;;;;;;mCApB7C,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;0BA+B3B,6LAAC,mIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,6LAAC,mIAAA,CAAA,aAAU;;0CACT,6LAAC,mIAAA,CAAA,YAAS;gCAAC,WAAU;0CAAa;;;;;;0CAClC,6LAAC,mIAAA,CAAA,kBAAe;gCAAC,WAAU;;oCAAiB;oCACH,aAAa,MAAM;oCAAC;;;;;;;;;;;;;kCAG/D,6LAAC,mIAAA,CAAA,cAAW;kCACV,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,oIAAA,CAAA,QAAK;;sDACJ,6LAAC,oIAAA,CAAA,cAAW;sDACV,cAAA,6LAAC,oIAAA,CAAA,WAAQ;gDAAC,WAAU;;kEAClB,6LAAC,oIAAA,CAAA,YAAS;wDAAC,WAAU;kEAAiB;;;;;;kEACtC,6LAAC,oIAAA,CAAA,YAAS;wDAAC,WAAU;kEAAiB;;;;;;kEACtC,6LAAC,oIAAA,CAAA,YAAS;wDAAC,WAAU;kEAAiB;;;;;;kEACtC,6LAAC,oIAAA,CAAA,YAAS;wDAAC,WAAU;kEAAiB;;;;;;kEACtC,6LAAC,oIAAA,CAAA,YAAS;wDAAC,WAAU;kEAAiB;;;;;;kEACtC,6LAAC,oIAAA,CAAA,YAAS;wDAAC,WAAU;kEAAiB;;;;;;kEACtC,6LAAC,oIAAA,CAAA,YAAS;wDAAC,WAAU;kEAAiB;;;;;;kEACtC,6LAAC,oIAAA,CAAA,YAAS;wDAAC,WAAU;kEAAiB;;;;;;;;;;;;;;;;;sDAG1C,6LAAC,oIAAA,CAAA,YAAS;sDACP,aAAa,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,uBAC9B,6LAAC,oIAAA,CAAA,WAAQ;oDAAiB,WAAU;;sEAClC,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;sEAClB,OAAO,QAAQ;;;;;;sEAElB,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;sEAClB,OAAO,QAAQ,CAAC,MAAM,GAAG,KAAK,OAAO,QAAQ,CAAC,SAAS,CAAC,GAAG,MAAM,QAAQ,OAAO,QAAQ;;;;;;sEAE3F,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;sEAClB,OAAO,OAAO;;;;;;sEAEjB,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;;gEAClB,OAAO,KAAK;gEAAE,OAAO,IAAI;;;;;;;sEAE5B,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;;gEAAyB;gEAC1C,OAAO,SAAS;gEAAE,OAAO,IAAI;;;;;;;sEAEjC,6LAAC,oIAAA,CAAA,YAAS;sEACR,cAAA,6LAAC,oIAAA,CAAA,QAAK;gEAAC,WAAW,GAAG,eAAe,OAAO,MAAM,EAAE,mBAAmB,CAAC;0EACpE,OAAO,MAAM;;;;;;;;;;;sEAGlB,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;sEAClB,IAAI,KAAK,OAAO,IAAI,EAAE,kBAAkB;;;;;;sEAE3C,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;sEAClB,OAAO,OAAO;;;;;;;mDAzBJ,OAAO,EAAE;;;;;;;;;;;;;;;;gCA+B7B,aAAa,MAAM,GAAG,oBACrB,6LAAC;oCAAI,WAAU;;wCAA0C;wCAClC,aAAa,MAAM;wCAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQzD;GAzVwB;KAAA","debugId":null}},
    {"offset": {"line": 4269, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 4345, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/dashboard/DashboardLocations.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useMemo } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Progress } from '@/components/ui/progress'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { PROCESSING_LOCATIONS, SAMPLE_DATA, getLocationStats } from '@/lib/data'\n\nexport default function DashboardLocations() {\n  const [selectedLocation, setSelectedLocation] = useState(PROCESSING_LOCATIONS[0].id)\n\n  const locationData = useMemo(() => {\n    return PROCESSING_LOCATIONS.map(location => {\n      const stats = getLocationStats(location.id)\n      const recentSamples = SAMPLE_DATA\n        .filter(d => d.locationId === location.id)\n        .sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime())\n        .slice(0, 10)\n\n      // Calculate daily trends (last 7 days)\n      const last7Days = Array.from({ length: 7 }, (_, i) => {\n        const date = new Date()\n        date.setDate(date.getDate() - i)\n        return date.toISOString().split('T')[0]\n      }).reverse()\n\n      const dailyTrends = last7Days.map(date => {\n        const dayData = SAMPLE_DATA.filter(d => \n          d.locationId === location.id && d.date === date\n        )\n        const passCount = dayData.filter(d => d.status === 'PASS').length\n        const passRate = dayData.length > 0 ? Math.round((passCount / dayData.length) * 100) : 0\n        \n        return {\n          date,\n          samples: dayData.length,\n          passRate,\n          averageValue: dayData.length > 0 \n            ? Math.round((dayData.reduce((sum, d) => sum + d.value, 0) / dayData.length) * 100) / 100 \n            : 0\n        }\n      })\n\n      return {\n        ...location,\n        stats,\n        recentSamples,\n        dailyTrends\n      }\n    })\n  }, [])\n\n  const selectedLocationData = locationData.find(loc => loc.id === selectedLocation)\n\n  const getStatusColor = (passRate: number) => {\n    if (passRate >= 90) return 'text-green-400'\n    if (passRate >= 80) return 'text-yellow-400'\n    return 'text-red-400'\n  }\n\n  const getStatusBadge = (status: string) => {\n    const variants = {\n      'PASS': 'bg-green-600',\n      'WARNING': 'bg-yellow-600',\n      'FAIL': 'bg-red-600'\n    }\n    return variants[status as keyof typeof variants] || 'bg-slate-600'\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div>\n        <h1 className=\"text-2xl font-bold text-white\">Processing Locations</h1>\n        <p className=\"text-slate-400\">Detailed view of each processing location and their quality metrics</p>\n      </div>\n\n      {/* Location Overview Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {locationData.map((location) => (\n          <Card \n            key={location.id}\n            className={`bg-slate-800 border-slate-700 cursor-pointer transition-all hover:bg-slate-700/50 ${\n              selectedLocation === location.id ? 'ring-2 ring-orange-500' : ''\n            }`}\n            onClick={() => setSelectedLocation(location.id)}\n          >\n            <CardHeader className=\"pb-3\">\n              <div className=\"flex items-center justify-between\">\n                <CardTitle className=\"text-white text-sm leading-tight\">\n                  {location.name}\n                </CardTitle>\n                <Badge\n                  className={`${\n                    location.stats.passRate >= 90 ? 'bg-green-600' :\n                    location.stats.passRate >= 80 ? 'bg-yellow-600' : 'bg-red-600'\n                  } text-white text-xs`}\n                >\n                  {location.stats.passRate}%\n                </Badge>\n              </div>\n              <CardDescription className=\"text-slate-400 text-xs\">\n                {location.product}\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3\">\n                <div>\n                  <div className=\"flex justify-between text-xs text-slate-400 mb-1\">\n                    <span>Quality Performance</span>\n                    <span>{location.stats.passRate}%</span>\n                  </div>\n                  <Progress value={location.stats.passRate} className=\"h-2\" />\n                </div>\n                \n                <div className=\"grid grid-cols-2 gap-3 text-xs\">\n                  <div>\n                    <div className=\"text-slate-400\">Total Samples</div>\n                    <div className=\"text-white font-medium\">{location.stats.total}</div>\n                  </div>\n                  <div>\n                    <div className=\"text-slate-400\">Avg Value</div>\n                    <div className=\"text-white font-medium\">\n                      {location.stats.averageValue}{location.targetQuality.unit}\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"text-slate-400\">Target</div>\n                    <div className=\"text-white font-medium\">\n                      ≥{location.targetQuality.minValue}{location.targetQuality.unit}\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"text-slate-400\">Status</div>\n                    <div className={`font-medium ${getStatusColor(location.stats.passRate)}`}>\n                      {location.stats.passRate >= 90 ? 'Excellent' :\n                       location.stats.passRate >= 80 ? 'Good' :\n                       location.stats.passRate >= 60 ? 'Warning' : 'Critical'}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {/* Detailed View */}\n      {selectedLocationData && (\n        <Card className=\"bg-slate-800 border-slate-700\">\n          <CardHeader>\n            <CardTitle className=\"text-white\">{selectedLocationData.name}</CardTitle>\n            <CardDescription className=\"text-slate-400\">\n              Detailed analysis and recent activity for {selectedLocationData.product}\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Tabs defaultValue=\"overview\" className=\"w-full\">\n              <TabsList className=\"grid w-full grid-cols-3 bg-slate-700\">\n                <TabsTrigger value=\"overview\" className=\"data-[state=active]:bg-orange-600\">\n                  Overview\n                </TabsTrigger>\n                <TabsTrigger value=\"trends\" className=\"data-[state=active]:bg-orange-600\">\n                  Trends\n                </TabsTrigger>\n                <TabsTrigger value=\"samples\" className=\"data-[state=active]:bg-orange-600\">\n                  Recent Samples\n                </TabsTrigger>\n              </TabsList>\n\n              <TabsContent value=\"overview\" className=\"space-y-6\">\n                {/* Key Metrics */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                  <div className=\"p-4 bg-slate-700/30 rounded-lg\">\n                    <div className=\"text-slate-400 text-sm\">Total Samples</div>\n                    <div className=\"text-2xl font-bold text-white\">{selectedLocationData.stats.total}</div>\n                  </div>\n                  <div className=\"p-4 bg-slate-700/30 rounded-lg\">\n                    <div className=\"text-slate-400 text-sm\">Pass Rate</div>\n                    <div className={`text-2xl font-bold ${getStatusColor(selectedLocationData.stats.passRate)}`}>\n                      {selectedLocationData.stats.passRate}%\n                    </div>\n                  </div>\n                  <div className=\"p-4 bg-slate-700/30 rounded-lg\">\n                    <div className=\"text-slate-400 text-sm\">Average Value</div>\n                    <div className=\"text-2xl font-bold text-white\">\n                      {selectedLocationData.stats.averageValue}{selectedLocationData.targetQuality.unit}\n                    </div>\n                  </div>\n                  <div className=\"p-4 bg-slate-700/30 rounded-lg\">\n                    <div className=\"text-slate-400 text-sm\">Target</div>\n                    <div className=\"text-2xl font-bold text-white\">\n                      ≥{selectedLocationData.targetQuality.minValue}{selectedLocationData.targetQuality.unit}\n                    </div>\n                  </div>\n                </div>\n\n                {/* Status Breakdown */}\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <div className=\"p-4 bg-green-900/20 border border-green-800 rounded-lg\">\n                    <div className=\"text-green-400 text-sm\">Passed Samples</div>\n                    <div className=\"text-2xl font-bold text-green-400\">{selectedLocationData.stats.passed}</div>\n                    <div className=\"text-green-300 text-xs\">\n                      {selectedLocationData.stats.total > 0 \n                        ? Math.round((selectedLocationData.stats.passed / selectedLocationData.stats.total) * 100)\n                        : 0}% of total\n                    </div>\n                  </div>\n                  <div className=\"p-4 bg-yellow-900/20 border border-yellow-800 rounded-lg\">\n                    <div className=\"text-yellow-400 text-sm\">Warning Samples</div>\n                    <div className=\"text-2xl font-bold text-yellow-400\">{selectedLocationData.stats.warnings}</div>\n                    <div className=\"text-yellow-300 text-xs\">\n                      {selectedLocationData.stats.total > 0 \n                        ? Math.round((selectedLocationData.stats.warnings / selectedLocationData.stats.total) * 100)\n                        : 0}% of total\n                    </div>\n                  </div>\n                  <div className=\"p-4 bg-red-900/20 border border-red-800 rounded-lg\">\n                    <div className=\"text-red-400 text-sm\">Failed Samples</div>\n                    <div className=\"text-2xl font-bold text-red-400\">{selectedLocationData.stats.failed}</div>\n                    <div className=\"text-red-300 text-xs\">\n                      {selectedLocationData.stats.total > 0 \n                        ? Math.round((selectedLocationData.stats.failed / selectedLocationData.stats.total) * 100)\n                        : 0}% of total\n                    </div>\n                  </div>\n                </div>\n              </TabsContent>\n\n              <TabsContent value=\"trends\" className=\"space-y-6\">\n                <div className=\"space-y-4\">\n                  <h3 className=\"text-lg font-semibold text-white\">7-Day Trend Analysis</h3>\n                  <div className=\"space-y-3\">\n                    {selectedLocationData.dailyTrends.map((trend, index) => (\n                      <div key={trend.date} className=\"flex items-center space-x-4 p-3 bg-slate-700/30 rounded-lg\">\n                        <div className=\"w-20 text-sm text-slate-400\">\n                          {new Date(trend.date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\n                        </div>\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center justify-between mb-1\">\n                            <span className=\"text-sm text-slate-300\">Pass Rate</span>\n                            <span className={`text-sm font-medium ${getStatusColor(trend.passRate)}`}>\n                              {trend.passRate}%\n                            </span>\n                          </div>\n                          <Progress value={trend.passRate} className=\"h-2\" />\n                        </div>\n                        <div className=\"text-right\">\n                          <div className=\"text-sm text-white font-medium\">{trend.samples}</div>\n                          <div className=\"text-xs text-slate-400\">samples</div>\n                        </div>\n                        <div className=\"text-right\">\n                          <div className=\"text-sm text-white font-medium\">\n                            {trend.averageValue}{selectedLocationData.targetQuality.unit}\n                          </div>\n                          <div className=\"text-xs text-slate-400\">avg value</div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </TabsContent>\n\n              <TabsContent value=\"samples\" className=\"space-y-6\">\n                <div className=\"space-y-4\">\n                  <h3 className=\"text-lg font-semibold text-white\">Recent Samples</h3>\n                  <div className=\"space-y-2\">\n                    {selectedLocationData.recentSamples.map((sample) => (\n                      <div key={sample.id} className=\"flex items-center justify-between p-3 bg-slate-700/30 rounded-lg hover:bg-slate-700/50 transition-colors\">\n                        <div className=\"flex items-center space-x-4\">\n                          <Badge className={`${getStatusBadge(sample.status)} text-white text-xs`}>\n                            {sample.status}\n                          </Badge>\n                          <div>\n                            <div className=\"text-white font-medium text-sm\">{sample.sampleId}</div>\n                            <div className=\"text-slate-400 text-xs\">{sample.analyst}</div>\n                          </div>\n                        </div>\n                        <div className=\"text-right\">\n                          <div className=\"text-white font-medium\">\n                            {sample.value}{sample.unit}\n                          </div>\n                          <div className=\"text-slate-400 text-xs\">\n                            {new Date(sample.timestamp).toLocaleDateString()}\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </TabsContent>\n            </Tabs>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5302, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: React.ComponentProps<typeof DayPicker>) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row gap-2\",\n        month: \"flex flex-col gap-4\",\n        caption: \"flex justify-center pt-1 relative items-center w-full\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"flex items-center gap-1\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"size-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-x-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-8 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: cn(\n          \"relative p-0 text-center text-sm focus-within:relative focus-within:z-20 [&:has([aria-selected])]:bg-accent [&:has([aria-selected].day-range-end)]:rounded-r-md\",\n          props.mode === \"range\"\n            ? \"[&:has(>.day-range-end)]:rounded-r-md [&:has(>.day-range-start)]:rounded-l-md first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md\"\n            : \"[&:has([aria-selected])]:rounded-md\"\n        ),\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"size-8 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_start:\n          \"day-range-start aria-selected:bg-primary aria-selected:text-primary-foreground\",\n        day_range_end:\n          \"day-range-end aria-selected:bg-primary aria-selected:text-primary-foreground\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"size-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"size-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AASA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACoC;IACvC,qBACE,6LAAC,iKAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACL,mKACA,MAAM,IAAI,KAAK,UACX,yKACA;YAEN,KAAK,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,iBACE;YACF,eACE;YACF,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,UAAU;oBAAa,GAAG,KAAK;;;;;;YAE5D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,UAAU;oBAAa,GAAG,KAAK;;;;;;QAE/D;QACC,GAAG,KAAK;;;;;;AAGf;KA/DS","debugId":null}},
    {"offset": {"line": 5388, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Popover({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Root>) {\n  return <PopoverPrimitive.Root data-slot=\"popover\" {...props} />\n}\n\nfunction PopoverTrigger({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {\n  return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />\n}\n\nfunction PopoverContent({\n  className,\n  align = \"center\",\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Content>) {\n  return (\n    <PopoverPrimitive.Portal>\n      <PopoverPrimitive.Content\n        data-slot=\"popover-content\"\n        align={align}\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 origin-(--radix-popover-content-transform-origin) rounded-md border p-4 shadow-md outline-hidden\",\n          className\n        )}\n        {...props}\n      />\n    </PopoverPrimitive.Portal>\n  )\n}\n\nfunction PopoverAnchor({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Anchor>) {\n  return <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />\n}\n\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,QAAQ,EACf,GAAG,OACgD;IACnD,qBAAO,6LAAC,sKAAA,CAAA,OAAqB;QAAC,aAAU;QAAW,GAAG,KAAK;;;;;;AAC7D;KAJS;AAMT,SAAS,eAAe,EACtB,GAAG,OACmD;IACtD,qBAAO,6LAAC,sKAAA,CAAA,UAAwB;QAAC,aAAU;QAAmB,GAAG,KAAK;;;;;;AACxE;MAJS;AAMT,SAAS,eAAe,EACtB,SAAS,EACT,QAAQ,QAAQ,EAChB,aAAa,CAAC,EACd,GAAG,OACmD;IACtD,qBACE,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,aAAU;YACV,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,keACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIjB;MApBS;AAsBT,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,6LAAC,sKAAA,CAAA,SAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;MAJS","debugId":null}},
    {"offset": {"line": 5469, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/dashboard/DashboardHistory.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useMemo } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Badge } from '@/components/ui/badge'\nimport { Calendar } from '@/components/ui/calendar'\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover'\nimport { PROCESSING_LOCATIONS, SAMPLE_DATA } from '@/lib/data'\nimport { format } from 'date-fns'\n\nexport default function DashboardHistory() {\n  const [selectedLocation, setSelectedLocation] = useState<string>('all')\n  const [selectedPeriod, setSelectedPeriod] = useState<string>('30')\n  const [startDate, setStartDate] = useState<Date>()\n  const [endDate, setEndDate] = useState<Date>()\n  const [viewMode, setViewMode] = useState<'timeline' | 'summary'>('timeline')\n\n  const historicalData = useMemo(() => {\n    let filtered = SAMPLE_DATA\n\n    // Filter by location\n    if (selectedLocation !== 'all') {\n      filtered = filtered.filter(d => d.locationId === selectedLocation)\n    }\n\n    // Filter by date range\n    if (startDate && endDate) {\n      filtered = filtered.filter(d => {\n        const sampleDate = new Date(d.date)\n        return sampleDate >= startDate && sampleDate <= endDate\n      })\n    } else {\n      // Use selected period\n      const cutoffDate = new Date()\n      cutoffDate.setDate(cutoffDate.getDate() - parseInt(selectedPeriod))\n      filtered = filtered.filter(d => new Date(d.timestamp) >= cutoffDate)\n    }\n\n    return filtered.sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime())\n  }, [selectedLocation, selectedPeriod, startDate, endDate])\n\n  const timelineData = useMemo(() => {\n    // Group data by date\n    const grouped = historicalData.reduce((acc, sample) => {\n      const date = sample.date\n      if (!acc[date]) {\n        acc[date] = []\n      }\n      acc[date].push(sample)\n      return acc\n    }, {} as Record<string, typeof historicalData>)\n\n    // Convert to timeline format\n    return Object.entries(grouped)\n      .map(([date, samples]) => {\n        const total = samples.length\n        const passed = samples.filter(s => s.status === 'PASS').length\n        const warnings = samples.filter(s => s.status === 'WARNING').length\n        const failed = samples.filter(s => s.status === 'FAIL').length\n        const passRate = total > 0 ? Math.round((passed / total) * 100) : 0\n\n        // Group by location for this date\n        const locationBreakdown = PROCESSING_LOCATIONS.map(location => {\n          const locationSamples = samples.filter(s => s.locationId === location.id)\n          const locationPassed = locationSamples.filter(s => s.status === 'PASS').length\n          const locationPassRate = locationSamples.length > 0 \n            ? Math.round((locationPassed / locationSamples.length) * 100) \n            : 0\n\n          return {\n            ...location,\n            samples: locationSamples.length,\n            passed: locationPassed,\n            passRate: locationPassRate,\n            averageValue: locationSamples.length > 0\n              ? Math.round((locationSamples.reduce((sum, s) => sum + s.value, 0) / locationSamples.length) * 100) / 100\n              : 0\n          }\n        }).filter(loc => loc.samples > 0)\n\n        return {\n          date,\n          total,\n          passed,\n          warnings,\n          failed,\n          passRate,\n          samples,\n          locationBreakdown\n        }\n      })\n      .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n  }, [historicalData])\n\n  const summaryData = useMemo(() => {\n    // Monthly summary\n    const monthlyData = historicalData.reduce((acc, sample) => {\n      const month = sample.date.substring(0, 7) // YYYY-MM\n      if (!acc[month]) {\n        acc[month] = []\n      }\n      acc[month].push(sample)\n      return acc\n    }, {} as Record<string, typeof historicalData>)\n\n    return Object.entries(monthlyData)\n      .map(([month, samples]) => {\n        const total = samples.length\n        const passed = samples.filter(s => s.status === 'PASS').length\n        const warnings = samples.filter(s => s.status === 'WARNING').length\n        const failed = samples.filter(s => s.status === 'FAIL').length\n        const passRate = total > 0 ? Math.round((passed / total) * 100) : 0\n\n        // Calculate trends\n        const sortedSamples = samples.sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime())\n        const firstHalf = sortedSamples.slice(0, Math.floor(sortedSamples.length / 2))\n        const secondHalf = sortedSamples.slice(Math.floor(sortedSamples.length / 2))\n        \n        const firstHalfPassRate = firstHalf.length > 0 \n          ? Math.round((firstHalf.filter(s => s.status === 'PASS').length / firstHalf.length) * 100)\n          : 0\n        const secondHalfPassRate = secondHalf.length > 0 \n          ? Math.round((secondHalf.filter(s => s.status === 'PASS').length / secondHalf.length) * 100)\n          : 0\n        \n        const trend = secondHalfPassRate - firstHalfPassRate\n\n        return {\n          month,\n          total,\n          passed,\n          warnings,\n          failed,\n          passRate,\n          trend,\n          averageValue: total > 0\n            ? Math.round((samples.reduce((sum, s) => sum + s.value, 0) / total) * 100) / 100\n            : 0\n        }\n      })\n      .sort((a, b) => b.month.localeCompare(a.month))\n  }, [historicalData])\n\n  const getStatusColor = (passRate: number) => {\n    if (passRate >= 90) return 'text-green-400'\n    if (passRate >= 80) return 'text-yellow-400'\n    return 'text-red-400'\n  }\n\n  const getTrendIcon = (trend: number) => {\n    if (trend > 5) return '📈'\n    if (trend < -5) return '📉'\n    return '➡️'\n  }\n\n  const getTrendColor = (trend: number) => {\n    if (trend > 5) return 'text-green-400'\n    if (trend < -5) return 'text-red-400'\n    return 'text-slate-400'\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-white\">Historical Analysis</h1>\n          <p className=\"text-slate-400\">Track quality trends and performance over time</p>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            variant={viewMode === 'timeline' ? 'default' : 'outline'}\n            onClick={() => setViewMode('timeline')}\n            className={viewMode === 'timeline' ? 'bg-orange-600 hover:bg-orange-700' : ''}\n          >\n            Timeline\n          </Button>\n          <Button\n            variant={viewMode === 'summary' ? 'default' : 'outline'}\n            onClick={() => setViewMode('summary')}\n            className={viewMode === 'summary' ? 'bg-orange-600 hover:bg-orange-700' : ''}\n          >\n            Summary\n          </Button>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <Card className=\"bg-slate-800 border-slate-700\">\n        <CardHeader>\n          <CardTitle className=\"text-white\">Filters</CardTitle>\n          <CardDescription className=\"text-slate-400\">\n            Filter historical data by location and time period\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <div>\n              <label className=\"text-sm font-medium text-slate-300 mb-2 block\">Location</label>\n              <Select value={selectedLocation} onValueChange={setSelectedLocation}>\n                <SelectTrigger className=\"bg-slate-700 border-slate-600 text-white\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent className=\"bg-slate-800 border-slate-700\">\n                  <SelectItem value=\"all\">All Locations</SelectItem>\n                  {PROCESSING_LOCATIONS.map(location => (\n                    <SelectItem key={location.id} value={location.id}>\n                      {location.name}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium text-slate-300 mb-2 block\">Time Period</label>\n              <Select value={selectedPeriod} onValueChange={setSelectedPeriod}>\n                <SelectTrigger className=\"bg-slate-700 border-slate-600 text-white\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent className=\"bg-slate-800 border-slate-700\">\n                  <SelectItem value=\"7\">Last 7 Days</SelectItem>\n                  <SelectItem value=\"30\">Last 30 Days</SelectItem>\n                  <SelectItem value=\"90\">Last 90 Days</SelectItem>\n                  <SelectItem value=\"365\">Last Year</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium text-slate-300 mb-2 block\">Start Date</label>\n              <Popover>\n                <PopoverTrigger asChild>\n                  <Button\n                    variant=\"outline\"\n                    className=\"w-full bg-slate-700 border-slate-600 text-white hover:bg-slate-600\"\n                  >\n                    {startDate ? format(startDate, 'MMM dd, yyyy') : 'Select date'}\n                  </Button>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-auto p-0 bg-slate-800 border-slate-700\">\n                  <Calendar\n                    mode=\"single\"\n                    selected={startDate}\n                    onSelect={setStartDate}\n                    className=\"rounded-md border-0\"\n                  />\n                </PopoverContent>\n              </Popover>\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium text-slate-300 mb-2 block\">End Date</label>\n              <Popover>\n                <PopoverTrigger asChild>\n                  <Button\n                    variant=\"outline\"\n                    className=\"w-full bg-slate-700 border-slate-600 text-white hover:bg-slate-600\"\n                  >\n                    {endDate ? format(endDate, 'MMM dd, yyyy') : 'Select date'}\n                  </Button>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-auto p-0 bg-slate-800 border-slate-700\">\n                  <Calendar\n                    mode=\"single\"\n                    selected={endDate}\n                    onSelect={setEndDate}\n                    className=\"rounded-md border-0\"\n                  />\n                </PopoverContent>\n              </Popover>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Timeline View */}\n      {viewMode === 'timeline' && (\n        <div className=\"space-y-4\">\n          <h2 className=\"text-xl font-semibold text-white\">Daily Timeline</h2>\n          {timelineData.map((day) => (\n            <Card key={day.date} className=\"bg-slate-800 border-slate-700\">\n              <CardHeader>\n                <div className=\"flex items-center justify-between\">\n                  <CardTitle className=\"text-white\">\n                    {new Date(day.date).toLocaleDateString('en-US', { \n                      weekday: 'long', \n                      year: 'numeric', \n                      month: 'long', \n                      day: 'numeric' \n                    })}\n                  </CardTitle>\n                  <Badge className={`${\n                    day.passRate >= 90 ? 'bg-green-600' :\n                    day.passRate >= 80 ? 'bg-yellow-600' : 'bg-red-600'\n                  } text-white`}>\n                    {day.passRate}% Pass Rate\n                  </Badge>\n                </div>\n                <CardDescription className=\"text-slate-400\">\n                  {day.total} samples processed across {day.locationBreakdown.length} locations\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\n                  <div className=\"p-3 bg-slate-700/30 rounded-lg\">\n                    <div className=\"text-slate-400 text-sm\">Total Samples</div>\n                    <div className=\"text-xl font-bold text-white\">{day.total}</div>\n                  </div>\n                  <div className=\"p-3 bg-green-900/20 border border-green-800 rounded-lg\">\n                    <div className=\"text-green-400 text-sm\">Passed</div>\n                    <div className=\"text-xl font-bold text-green-400\">{day.passed}</div>\n                  </div>\n                  <div className=\"p-3 bg-yellow-900/20 border border-yellow-800 rounded-lg\">\n                    <div className=\"text-yellow-400 text-sm\">Warnings</div>\n                    <div className=\"text-xl font-bold text-yellow-400\">{day.warnings}</div>\n                  </div>\n                  <div className=\"p-3 bg-red-900/20 border border-red-800 rounded-lg\">\n                    <div className=\"text-red-400 text-sm\">Failed</div>\n                    <div className=\"text-xl font-bold text-red-400\">{day.failed}</div>\n                  </div>\n                </div>\n\n                {/* Location Breakdown */}\n                <div className=\"space-y-2\">\n                  <h4 className=\"text-sm font-medium text-slate-300\">Location Performance</h4>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                    {day.locationBreakdown.map((location) => (\n                      <div key={location.id} className=\"flex items-center justify-between p-3 bg-slate-700/20 rounded-lg\">\n                        <div>\n                          <div className=\"text-white text-sm font-medium\">\n                            {location.name.length > 25 ? location.name.substring(0, 25) + '...' : location.name}\n                          </div>\n                          <div className=\"text-slate-400 text-xs\">{location.samples} samples</div>\n                        </div>\n                        <div className=\"text-right\">\n                          <div className={`text-sm font-medium ${getStatusColor(location.passRate)}`}>\n                            {location.passRate}%\n                          </div>\n                          <div className=\"text-slate-400 text-xs\">\n                            {location.averageValue}{location.targetQuality.unit}\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      )}\n\n      {/* Summary View */}\n      {viewMode === 'summary' && (\n        <div className=\"space-y-4\">\n          <h2 className=\"text-xl font-semibold text-white\">Monthly Summary</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {summaryData.map((month) => (\n              <Card key={month.month} className=\"bg-slate-800 border-slate-700\">\n                <CardHeader>\n                  <div className=\"flex items-center justify-between\">\n                    <CardTitle className=\"text-white\">\n                      {new Date(month.month + '-01').toLocaleDateString('en-US', { \n                        year: 'numeric', \n                        month: 'long' \n                      })}\n                    </CardTitle>\n                    <Badge className={`${\n                      month.passRate >= 90 ? 'bg-green-600' :\n                      month.passRate >= 80 ? 'bg-yellow-600' : 'bg-red-600'\n                    } text-white`}>\n                      {month.passRate}%\n                    </Badge>\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"grid grid-cols-2 gap-3 text-sm\">\n                      <div>\n                        <div className=\"text-slate-400\">Total Samples</div>\n                        <div className=\"text-white font-medium\">{month.total}</div>\n                      </div>\n                      <div>\n                        <div className=\"text-slate-400\">Pass Rate</div>\n                        <div className={`font-medium ${getStatusColor(month.passRate)}`}>\n                          {month.passRate}%\n                        </div>\n                      </div>\n                      <div>\n                        <div className=\"text-slate-400\">Avg Value</div>\n                        <div className=\"text-white font-medium\">{month.averageValue}%</div>\n                      </div>\n                      <div>\n                        <div className=\"text-slate-400\">Trend</div>\n                        <div className={`font-medium flex items-center space-x-1 ${getTrendColor(month.trend)}`}>\n                          <span>{getTrendIcon(month.trend)}</span>\n                          <span>{month.trend > 0 ? '+' : ''}{month.trend}%</span>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"pt-3 border-t border-slate-700\">\n                      <div className=\"grid grid-cols-3 gap-2 text-xs\">\n                        <div className=\"text-center\">\n                          <div className=\"text-green-400 font-medium\">{month.passed}</div>\n                          <div className=\"text-slate-400\">Passed</div>\n                        </div>\n                        <div className=\"text-center\">\n                          <div className=\"text-yellow-400 font-medium\">{month.warnings}</div>\n                          <div className=\"text-slate-400\">Warnings</div>\n                        </div>\n                        <div className=\"text-center\">\n                          <div className=\"text-red-400 font-medium\">{month.failed}</div>\n                          <div className=\"text-slate-400\">Failed</div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6662, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content>) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <DialogPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\n          <XIcon />\n          <span className=\"sr-only\">Close</span>\n        </DialogPrimitive.Close>\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,6LAAC,qKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;KAJS;AAMT,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,6LAAC,qKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;MAJS;AAMT,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,6LAAC,qKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;MAJS;AAMT,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,6LAAC,qKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,6LAAC,qKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,GAAG,OACkD;IACrD,qBACE,6LAAC;QAAa,aAAU;;0BACtB,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,mMAAA,CAAA,QAAK;;;;;0CACN,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKpC;MAxBS;AA0BT,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,qKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 6859, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS","debugId":null}},
    {"offset": {"line": 6890, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/dashboard/DashboardAlerts.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useMemo } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Badge } from '@/components/ui/badge'\nimport { Input } from '@/components/ui/input'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'\nimport { Textarea } from '@/components/ui/textarea'\nimport { PROCESSING_LOCATIONS, SAMPLE_DATA, getAlerts } from '@/lib/data'\n\nexport default function DashboardAlerts() {\n  const [selectedSeverity, setSelectedSeverity] = useState<string>('all')\n  const [selectedLocation, setSelectedLocation] = useState<string>('all')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [selectedAlert, setSelectedAlert] = useState<any>(null)\n\n  const alerts = useMemo(() => {\n    let filtered = getAlerts()\n\n    // Filter by severity\n    if (selectedSeverity !== 'all') {\n      if (selectedSeverity === 'critical') {\n        filtered = filtered.filter(alert => alert.status === 'FAIL')\n      } else if (selectedSeverity === 'warning') {\n        filtered = filtered.filter(alert => alert.status === 'WARNING')\n      }\n    }\n\n    // Filter by location\n    if (selectedLocation !== 'all') {\n      filtered = filtered.filter(alert => alert.locationId === selectedLocation)\n    }\n\n    // Filter by search term\n    if (searchTerm) {\n      filtered = filtered.filter(alert => \n        alert.location.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        alert.product.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        alert.sampleId.toLowerCase().includes(searchTerm.toLowerCase())\n      )\n    }\n\n    return filtered\n  }, [selectedSeverity, selectedLocation, searchTerm])\n\n  const alertStats = useMemo(() => {\n    const allAlerts = getAlerts()\n    const critical = allAlerts.filter(a => a.status === 'FAIL').length\n    const warnings = allAlerts.filter(a => a.status === 'WARNING').length\n    const total = allAlerts.length\n\n    // Group by location\n    const locationAlerts = PROCESSING_LOCATIONS.map(location => {\n      const locationAlerts = allAlerts.filter(a => a.locationId === location.id)\n      const locationCritical = locationAlerts.filter(a => a.status === 'FAIL').length\n      const locationWarnings = locationAlerts.filter(a => a.status === 'WARNING').length\n      \n      return {\n        ...location,\n        total: locationAlerts.length,\n        critical: locationCritical,\n        warnings: locationWarnings\n      }\n    }).filter(loc => loc.total > 0)\n\n    // Recent trends (last 24 hours vs previous 24 hours)\n    const now = new Date()\n    const last24h = new Date(now.getTime() - 24 * 60 * 60 * 1000)\n    const previous24h = new Date(now.getTime() - 48 * 60 * 60 * 1000)\n\n    const recentAlerts = allAlerts.filter(a => new Date(a.timestamp) >= last24h)\n    const previousAlerts = allAlerts.filter(a => \n      new Date(a.timestamp) >= previous24h && new Date(a.timestamp) < last24h\n    )\n\n    const trend = recentAlerts.length - previousAlerts.length\n\n    return {\n      total,\n      critical,\n      warnings,\n      locationAlerts,\n      recentCount: recentAlerts.length,\n      trend\n    }\n  }, [])\n\n  const getSeverityColor = (status: string) => {\n    return status === 'FAIL' ? 'bg-red-600' : 'bg-yellow-600'\n  }\n\n  const getSeverityIcon = (status: string) => {\n    return status === 'FAIL' ? '🚨' : '⚠️'\n  }\n\n  const getPriorityLevel = (alert: any) => {\n    const deviation = ((alert.targetMin - alert.value) / alert.targetMin) * 100\n    if (alert.status === 'FAIL') {\n      if (deviation > 20) return 'High'\n      if (deviation > 10) return 'Medium'\n      return 'Low'\n    }\n    return 'Low'\n  }\n\n  const getTimeAgo = (timestamp: string) => {\n    const now = new Date()\n    const alertTime = new Date(timestamp)\n    const diffInMinutes = Math.floor((now.getTime() - alertTime.getTime()) / (1000 * 60))\n    \n    if (diffInMinutes < 60) return `${diffInMinutes}m ago`\n    if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)}h ago`\n    return `${Math.floor(diffInMinutes / 1440)}d ago`\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-white\">Quality Alerts</h1>\n          <p className=\"text-slate-400\">Monitor and manage quality issues requiring attention</p>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Button className=\"bg-orange-600 hover:bg-orange-700\">\n            Configure Alerts\n          </Button>\n        </div>\n      </div>\n\n      {/* Alert Statistics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <Card className=\"bg-slate-800 border-slate-700\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-slate-400\">Total Alerts</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-white\">{alertStats.total}</div>\n            <p className=\"text-xs text-slate-400\">Active quality issues</p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-slate-800 border-slate-700\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-slate-400\">Critical Alerts</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-red-400\">{alertStats.critical}</div>\n            <p className=\"text-xs text-slate-400\">Failed quality tests</p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-slate-800 border-slate-700\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-slate-400\">Warning Alerts</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-yellow-400\">{alertStats.warnings}</div>\n            <p className=\"text-xs text-slate-400\">Below target threshold</p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-slate-800 border-slate-700\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-slate-400\">24h Trend</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className={`text-2xl font-bold ${alertStats.trend > 0 ? 'text-red-400' : alertStats.trend < 0 ? 'text-green-400' : 'text-slate-400'}`}>\n              {alertStats.trend > 0 ? '+' : ''}{alertStats.trend}\n            </div>\n            <p className=\"text-xs text-slate-400\">vs previous 24h</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Filters */}\n      <Card className=\"bg-slate-800 border-slate-700\">\n        <CardHeader>\n          <CardTitle className=\"text-white\">Filters</CardTitle>\n          <CardDescription className=\"text-slate-400\">\n            Filter alerts by severity, location, and search terms\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <label className=\"text-sm font-medium text-slate-300 mb-2 block\">Severity</label>\n              <Select value={selectedSeverity} onValueChange={setSelectedSeverity}>\n                <SelectTrigger className=\"bg-slate-700 border-slate-600 text-white\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent className=\"bg-slate-800 border-slate-700\">\n                  <SelectItem value=\"all\">All Severities</SelectItem>\n                  <SelectItem value=\"critical\">Critical Only</SelectItem>\n                  <SelectItem value=\"warning\">Warning Only</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium text-slate-300 mb-2 block\">Location</label>\n              <Select value={selectedLocation} onValueChange={setSelectedLocation}>\n                <SelectTrigger className=\"bg-slate-700 border-slate-600 text-white\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent className=\"bg-slate-800 border-slate-700\">\n                  <SelectItem value=\"all\">All Locations</SelectItem>\n                  {PROCESSING_LOCATIONS.map(location => (\n                    <SelectItem key={location.id} value={location.id}>\n                      {location.name}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium text-slate-300 mb-2 block\">Search</label>\n              <Input\n                placeholder=\"Search alerts...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"bg-slate-700 border-slate-600 text-white placeholder:text-slate-400\"\n              />\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      <Tabs defaultValue=\"active\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-2 bg-slate-700\">\n          <TabsTrigger value=\"active\" className=\"data-[state=active]:bg-orange-600\">\n            Active Alerts ({alerts.length})\n          </TabsTrigger>\n          <TabsTrigger value=\"locations\" className=\"data-[state=active]:bg-orange-600\">\n            By Location\n          </TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"active\" className=\"space-y-4\">\n          {alerts.length === 0 ? (\n            <Card className=\"bg-slate-800 border-slate-700\">\n              <CardContent className=\"flex items-center justify-center py-12\">\n                <div className=\"text-center\">\n                  <div className=\"text-4xl mb-4\">✅</div>\n                  <h3 className=\"text-lg font-medium text-white mb-2\">No Active Alerts</h3>\n                  <p className=\"text-slate-400\">All quality parameters are within acceptable ranges</p>\n                </div>\n              </CardContent>\n            </Card>\n          ) : (\n            <div className=\"space-y-3\">\n              {alerts.map((alert) => (\n                <Card key={alert.id} className=\"bg-slate-800 border-slate-700 hover:bg-slate-700/50 transition-colors\">\n                  <CardContent className=\"p-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-4\">\n                        <div className=\"text-2xl\">\n                          {getSeverityIcon(alert.status)}\n                        </div>\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center space-x-2 mb-1\">\n                            <Badge className={`${getSeverityColor(alert.status)} text-white text-xs`}>\n                              {alert.status}\n                            </Badge>\n                            <Badge variant=\"outline\" className=\"text-xs\">\n                              {getPriorityLevel(alert)} Priority\n                            </Badge>\n                            <span className=\"text-slate-400 text-xs\">\n                              {getTimeAgo(alert.timestamp)}\n                            </span>\n                          </div>\n                          <h3 className=\"text-white font-medium\">\n                            {alert.location} - {alert.product}\n                          </h3>\n                          <p className=\"text-slate-400 text-sm\">\n                            Sample {alert.sampleId}: {alert.parameter} level at {alert.value}{alert.unit} \n                            (Target: ≥{alert.targetMin}{alert.unit})\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className=\"text-white font-medium text-lg\">\n                          {alert.value}{alert.unit}\n                        </div>\n                        <div className=\"text-slate-400 text-sm\">\n                          Target: ≥{alert.targetMin}{alert.unit}\n                        </div>\n                        <Dialog>\n                          <DialogTrigger asChild>\n                            <Button \n                              variant=\"outline\" \n                              size=\"sm\" \n                              className=\"mt-2 bg-slate-700 border-slate-600 hover:bg-slate-600\"\n                              onClick={() => setSelectedAlert(alert)}\n                            >\n                              Details\n                            </Button>\n                          </DialogTrigger>\n                          <DialogContent className=\"bg-slate-800 border-slate-700 text-white\">\n                            <DialogHeader>\n                              <DialogTitle className=\"flex items-center space-x-2\">\n                                <span>{getSeverityIcon(alert.status)}</span>\n                                <span>Alert Details</span>\n                              </DialogTitle>\n                              <DialogDescription className=\"text-slate-400\">\n                                Quality alert for {alert.location}\n                              </DialogDescription>\n                            </DialogHeader>\n                            <div className=\"space-y-4\">\n                              <div className=\"grid grid-cols-2 gap-4\">\n                                <div>\n                                  <label className=\"text-sm text-slate-400\">Sample ID</label>\n                                  <div className=\"text-white font-mono\">{alert.sampleId}</div>\n                                </div>\n                                <div>\n                                  <label className=\"text-sm text-slate-400\">Status</label>\n                                  <div>\n                                    <Badge className={`${getSeverityColor(alert.status)} text-white`}>\n                                      {alert.status}\n                                    </Badge>\n                                  </div>\n                                </div>\n                                <div>\n                                  <label className=\"text-sm text-slate-400\">Location</label>\n                                  <div className=\"text-white\">{alert.location}</div>\n                                </div>\n                                <div>\n                                  <label className=\"text-sm text-slate-400\">Product</label>\n                                  <div className=\"text-white\">{alert.product}</div>\n                                </div>\n                                <div>\n                                  <label className=\"text-sm text-slate-400\">Parameter</label>\n                                  <div className=\"text-white\">{alert.parameter}</div>\n                                </div>\n                                <div>\n                                  <label className=\"text-sm text-slate-400\">Analyst</label>\n                                  <div className=\"text-white\">{alert.analyst}</div>\n                                </div>\n                                <div>\n                                  <label className=\"text-sm text-slate-400\">Measured Value</label>\n                                  <div className=\"text-white font-medium text-lg\">\n                                    {alert.value}{alert.unit}\n                                  </div>\n                                </div>\n                                <div>\n                                  <label className=\"text-sm text-slate-400\">Target Minimum</label>\n                                  <div className=\"text-white font-medium text-lg\">\n                                    {alert.targetMin}{alert.unit}\n                                  </div>\n                                </div>\n                                <div>\n                                  <label className=\"text-sm text-slate-400\">Deviation</label>\n                                  <div className=\"text-red-400 font-medium\">\n                                    -{Math.round(((alert.targetMin - alert.value) / alert.targetMin) * 100)}%\n                                  </div>\n                                </div>\n                                <div>\n                                  <label className=\"text-sm text-slate-400\">Priority</label>\n                                  <div className=\"text-white\">{getPriorityLevel(alert)}</div>\n                                </div>\n                                <div>\n                                  <label className=\"text-sm text-slate-400\">Date</label>\n                                  <div className=\"text-white\">\n                                    {new Date(alert.timestamp).toLocaleString()}\n                                  </div>\n                                </div>\n                              </div>\n                              \n                              <div>\n                                <label className=\"text-sm text-slate-400 block mb-2\">Actions Taken</label>\n                                <Textarea \n                                  placeholder=\"Record any actions taken to address this alert...\"\n                                  className=\"bg-slate-700 border-slate-600 text-white\"\n                                />\n                              </div>\n                              \n                              <div className=\"flex space-x-2\">\n                                <Button className=\"bg-orange-600 hover:bg-orange-700\">\n                                  Acknowledge\n                                </Button>\n                                <Button variant=\"outline\" className=\"border-slate-600\">\n                                  Escalate\n                                </Button>\n                              </div>\n                            </div>\n                          </DialogContent>\n                        </Dialog>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          )}\n        </TabsContent>\n\n        <TabsContent value=\"locations\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {alertStats.locationAlerts.map((location) => (\n              <Card key={location.id} className=\"bg-slate-800 border-slate-700\">\n                <CardHeader>\n                  <CardTitle className=\"text-white text-sm leading-tight\">\n                    {location.name}\n                  </CardTitle>\n                  <CardDescription className=\"text-slate-400\">\n                    {location.product}\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-slate-400 text-sm\">Total Alerts</span>\n                      <span className=\"text-white font-medium\">{location.total}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-slate-400 text-sm\">Critical</span>\n                      <Badge className=\"bg-red-600 text-white text-xs\">\n                        {location.critical}\n                      </Badge>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-slate-400 text-sm\">Warnings</span>\n                      <Badge className=\"bg-yellow-600 text-white text-xs\">\n                        {location.warnings}\n                      </Badge>\n                    </div>\n                    <div className=\"pt-2 border-t border-slate-700\">\n                      <div className=\"text-xs text-slate-400\">\n                        Target: ≥{location.targetQuality.minValue}{location.targetQuality.unit}\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAXA;;;;;;;;;;;AAae,SAAS;;IACtB,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACjE,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACjE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAO;IAExD,MAAM,SAAS,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;2CAAE;YACrB,IAAI,WAAW,CAAA,GAAA,qHAAA,CAAA,YAAS,AAAD;YAEvB,qBAAqB;YACrB,IAAI,qBAAqB,OAAO;gBAC9B,IAAI,qBAAqB,YAAY;oBACnC,WAAW,SAAS,MAAM;2DAAC,CAAA,QAAS,MAAM,MAAM,KAAK;;gBACvD,OAAO,IAAI,qBAAqB,WAAW;oBACzC,WAAW,SAAS,MAAM;2DAAC,CAAA,QAAS,MAAM,MAAM,KAAK;;gBACvD;YACF;YAEA,qBAAqB;YACrB,IAAI,qBAAqB,OAAO;gBAC9B,WAAW,SAAS,MAAM;uDAAC,CAAA,QAAS,MAAM,UAAU,KAAK;;YAC3D;YAEA,wBAAwB;YACxB,IAAI,YAAY;gBACd,WAAW,SAAS,MAAM;uDAAC,CAAA,QACzB,MAAM,QAAQ,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW,OAC5D,MAAM,OAAO,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW,OAC3D,MAAM,QAAQ,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,WAAW;;YAEhE;YAEA,OAAO;QACT;0CAAG;QAAC;QAAkB;QAAkB;KAAW;IAEnD,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;+CAAE;YACzB,MAAM,YAAY,CAAA,GAAA,qHAAA,CAAA,YAAS,AAAD;YAC1B,MAAM,WAAW,UAAU,MAAM;uDAAC,CAAA,IAAK,EAAE,MAAM,KAAK;sDAAQ,MAAM;YAClE,MAAM,WAAW,UAAU,MAAM;uDAAC,CAAA,IAAK,EAAE,MAAM,KAAK;sDAAW,MAAM;YACrE,MAAM,QAAQ,UAAU,MAAM;YAE9B,oBAAoB;YACpB,MAAM,iBAAiB,qHAAA,CAAA,uBAAoB,CAAC,GAAG;sEAAC,CAAA;oBAC9C,MAAM,iBAAiB,UAAU,MAAM;6FAAC,CAAA,IAAK,EAAE,UAAU,KAAK,SAAS,EAAE;;oBACzE,MAAM,mBAAmB,eAAe,MAAM;8EAAC,CAAA,IAAK,EAAE,MAAM,KAAK;6EAAQ,MAAM;oBAC/E,MAAM,mBAAmB,eAAe,MAAM;8EAAC,CAAA,IAAK,EAAE,MAAM,KAAK;6EAAW,MAAM;oBAElF,OAAO;wBACL,GAAG,QAAQ;wBACX,OAAO,eAAe,MAAM;wBAC5B,UAAU;wBACV,UAAU;oBACZ;gBACF;qEAAG,MAAM;sEAAC,CAAA,MAAO,IAAI,KAAK,GAAG;;YAE7B,qDAAqD;YACrD,MAAM,MAAM,IAAI;YAChB,MAAM,UAAU,IAAI,KAAK,IAAI,OAAO,KAAK,KAAK,KAAK,KAAK;YACxD,MAAM,cAAc,IAAI,KAAK,IAAI,OAAO,KAAK,KAAK,KAAK,KAAK;YAE5D,MAAM,eAAe,UAAU,MAAM;oEAAC,CAAA,IAAK,IAAI,KAAK,EAAE,SAAS,KAAK;;YACpE,MAAM,iBAAiB,UAAU,MAAM;sEAAC,CAAA,IACtC,IAAI,KAAK,EAAE,SAAS,KAAK,eAAe,IAAI,KAAK,EAAE,SAAS,IAAI;;YAGlE,MAAM,QAAQ,aAAa,MAAM,GAAG,eAAe,MAAM;YAEzD,OAAO;gBACL;gBACA;gBACA;gBACA;gBACA,aAAa,aAAa,MAAM;gBAChC;YACF;QACF;8CAAG,EAAE;IAEL,MAAM,mBAAmB,CAAC;QACxB,OAAO,WAAW,SAAS,eAAe;IAC5C;IAEA,MAAM,kBAAkB,CAAC;QACvB,OAAO,WAAW,SAAS,OAAO;IACpC;IAEA,MAAM,mBAAmB,CAAC;QACxB,MAAM,YAAY,AAAC,CAAC,MAAM,SAAS,GAAG,MAAM,KAAK,IAAI,MAAM,SAAS,GAAI;QACxE,IAAI,MAAM,MAAM,KAAK,QAAQ;YAC3B,IAAI,YAAY,IAAI,OAAO;YAC3B,IAAI,YAAY,IAAI,OAAO;YAC3B,OAAO;QACT;QACA,OAAO;IACT;IAEA,MAAM,aAAa,CAAC;QAClB,MAAM,MAAM,IAAI;QAChB,MAAM,YAAY,IAAI,KAAK;QAC3B,MAAM,gBAAgB,KAAK,KAAK,CAAC,CAAC,IAAI,OAAO,KAAK,UAAU,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE;QAEnF,IAAI,gBAAgB,IAAI,OAAO,GAAG,cAAc,KAAK,CAAC;QACtD,IAAI,gBAAgB,MAAM,OAAO,GAAG,KAAK,KAAK,CAAC,gBAAgB,IAAI,KAAK,CAAC;QACzE,OAAO,GAAG,KAAK,KAAK,CAAC,gBAAgB,MAAM,KAAK,CAAC;IACnD;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;;0CACC,6LAAC;gCAAG,WAAU;0CAAgC;;;;;;0CAC9C,6LAAC;gCAAE,WAAU;0CAAiB;;;;;;;;;;;;kCAEhC,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,qIAAA,CAAA,SAAM;4BAAC,WAAU;sCAAoC;;;;;;;;;;;;;;;;;0BAO1D,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,mIAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,6LAAC,mIAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,6LAAC,mIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAqC;;;;;;;;;;;0CAE5D,6LAAC,mIAAA,CAAA,cAAW;;kDACV,6LAAC;wCAAI,WAAU;kDAAiC,WAAW,KAAK;;;;;;kDAChE,6LAAC;wCAAE,WAAU;kDAAyB;;;;;;;;;;;;;;;;;;kCAI1C,6LAAC,mIAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,6LAAC,mIAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,6LAAC,mIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAqC;;;;;;;;;;;0CAE5D,6LAAC,mIAAA,CAAA,cAAW;;kDACV,6LAAC;wCAAI,WAAU;kDAAmC,WAAW,QAAQ;;;;;;kDACrE,6LAAC;wCAAE,WAAU;kDAAyB;;;;;;;;;;;;;;;;;;kCAI1C,6LAAC,mIAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,6LAAC,mIAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,6LAAC,mIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAqC;;;;;;;;;;;0CAE5D,6LAAC,mIAAA,CAAA,cAAW;;kDACV,6LAAC;wCAAI,WAAU;kDAAsC,WAAW,QAAQ;;;;;;kDACxE,6LAAC;wCAAE,WAAU;kDAAyB;;;;;;;;;;;;;;;;;;kCAI1C,6LAAC,mIAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,6LAAC,mIAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,6LAAC,mIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAqC;;;;;;;;;;;0CAE5D,6LAAC,mIAAA,CAAA,cAAW;;kDACV,6LAAC;wCAAI,WAAW,CAAC,mBAAmB,EAAE,WAAW,KAAK,GAAG,IAAI,iBAAiB,WAAW,KAAK,GAAG,IAAI,mBAAmB,kBAAkB;;4CACvI,WAAW,KAAK,GAAG,IAAI,MAAM;4CAAI,WAAW,KAAK;;;;;;;kDAEpD,6LAAC;wCAAE,WAAU;kDAAyB;;;;;;;;;;;;;;;;;;;;;;;;0BAM5C,6LAAC,mIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,6LAAC,mIAAA,CAAA,aAAU;;0CACT,6LAAC,mIAAA,CAAA,YAAS;gCAAC,WAAU;0CAAa;;;;;;0CAClC,6LAAC,mIAAA,CAAA,kBAAe;gCAAC,WAAU;0CAAiB;;;;;;;;;;;;kCAI9C,6LAAC,mIAAA,CAAA,cAAW;kCACV,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAAgD;;;;;;sDACjE,6LAAC,qIAAA,CAAA,SAAM;4CAAC,OAAO;4CAAkB,eAAe;;8DAC9C,6LAAC,qIAAA,CAAA,gBAAa;oDAAC,WAAU;8DACvB,cAAA,6LAAC,qIAAA,CAAA,cAAW;;;;;;;;;;8DAEd,6LAAC,qIAAA,CAAA,gBAAa;oDAAC,WAAU;;sEACvB,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAM;;;;;;sEACxB,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAW;;;;;;sEAC7B,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAU;;;;;;;;;;;;;;;;;;;;;;;;8CAKlC,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAAgD;;;;;;sDACjE,6LAAC,qIAAA,CAAA,SAAM;4CAAC,OAAO;4CAAkB,eAAe;;8DAC9C,6LAAC,qIAAA,CAAA,gBAAa;oDAAC,WAAU;8DACvB,cAAA,6LAAC,qIAAA,CAAA,cAAW;;;;;;;;;;8DAEd,6LAAC,qIAAA,CAAA,gBAAa;oDAAC,WAAU;;sEACvB,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAM;;;;;;wDACvB,qHAAA,CAAA,uBAAoB,CAAC,GAAG,CAAC,CAAA,yBACxB,6LAAC,qIAAA,CAAA,aAAU;gEAAmB,OAAO,SAAS,EAAE;0EAC7C,SAAS,IAAI;+DADC,SAAS,EAAE;;;;;;;;;;;;;;;;;;;;;;;8CAQpC,6LAAC;;sDACC,6LAAC;4CAAM,WAAU;sDAAgD;;;;;;sDACjE,6LAAC,oIAAA,CAAA,QAAK;4CACJ,aAAY;4CACZ,OAAO;4CACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;4CAC7C,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAOpB,6LAAC,mIAAA,CAAA,OAAI;gBAAC,cAAa;gBAAS,WAAU;;kCACpC,6LAAC,mIAAA,CAAA,WAAQ;wBAAC,WAAU;;0CAClB,6LAAC,mIAAA,CAAA,cAAW;gCAAC,OAAM;gCAAS,WAAU;;oCAAoC;oCACxD,OAAO,MAAM;oCAAC;;;;;;;0CAEhC,6LAAC,mIAAA,CAAA,cAAW;gCAAC,OAAM;gCAAY,WAAU;0CAAoC;;;;;;;;;;;;kCAK/E,6LAAC,mIAAA,CAAA,cAAW;wBAAC,OAAM;wBAAS,WAAU;kCACnC,OAAO,MAAM,KAAK,kBACjB,6LAAC,mIAAA,CAAA,OAAI;4BAAC,WAAU;sCACd,cAAA,6LAAC,mIAAA,CAAA,cAAW;gCAAC,WAAU;0CACrB,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;sDAAgB;;;;;;sDAC/B,6LAAC;4CAAG,WAAU;sDAAsC;;;;;;sDACpD,6LAAC;4CAAE,WAAU;sDAAiB;;;;;;;;;;;;;;;;;;;;;iDAKpC,6LAAC;4BAAI,WAAU;sCACZ,OAAO,GAAG,CAAC,CAAC,sBACX,6LAAC,mIAAA,CAAA,OAAI;oCAAgB,WAAU;8CAC7B,cAAA,6LAAC,mIAAA,CAAA,cAAW;wCAAC,WAAU;kDACrB,cAAA,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAI,WAAU;sEACZ,gBAAgB,MAAM,MAAM;;;;;;sEAE/B,6LAAC;4DAAI,WAAU;;8EACb,6LAAC;oEAAI,WAAU;;sFACb,6LAAC,oIAAA,CAAA,QAAK;4EAAC,WAAW,GAAG,iBAAiB,MAAM,MAAM,EAAE,mBAAmB,CAAC;sFACrE,MAAM,MAAM;;;;;;sFAEf,6LAAC,oIAAA,CAAA,QAAK;4EAAC,SAAQ;4EAAU,WAAU;;gFAChC,iBAAiB;gFAAO;;;;;;;sFAE3B,6LAAC;4EAAK,WAAU;sFACb,WAAW,MAAM,SAAS;;;;;;;;;;;;8EAG/B,6LAAC;oEAAG,WAAU;;wEACX,MAAM,QAAQ;wEAAC;wEAAI,MAAM,OAAO;;;;;;;8EAEnC,6LAAC;oEAAE,WAAU;;wEAAyB;wEAC5B,MAAM,QAAQ;wEAAC;wEAAG,MAAM,SAAS;wEAAC;wEAAW,MAAM,KAAK;wEAAE,MAAM,IAAI;wEAAC;wEAClE,MAAM,SAAS;wEAAE,MAAM,IAAI;wEAAC;;;;;;;;;;;;;;;;;;;8DAI7C,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAI,WAAU;;gEACZ,MAAM,KAAK;gEAAE,MAAM,IAAI;;;;;;;sEAE1B,6LAAC;4DAAI,WAAU;;gEAAyB;gEAC5B,MAAM,SAAS;gEAAE,MAAM,IAAI;;;;;;;sEAEvC,6LAAC,qIAAA,CAAA,SAAM;;8EACL,6LAAC,qIAAA,CAAA,gBAAa;oEAAC,OAAO;8EACpB,cAAA,6LAAC,qIAAA,CAAA,SAAM;wEACL,SAAQ;wEACR,MAAK;wEACL,WAAU;wEACV,SAAS,IAAM,iBAAiB;kFACjC;;;;;;;;;;;8EAIH,6LAAC,qIAAA,CAAA,gBAAa;oEAAC,WAAU;;sFACvB,6LAAC,qIAAA,CAAA,eAAY;;8FACX,6LAAC,qIAAA,CAAA,cAAW;oFAAC,WAAU;;sGACrB,6LAAC;sGAAM,gBAAgB,MAAM,MAAM;;;;;;sGACnC,6LAAC;sGAAK;;;;;;;;;;;;8FAER,6LAAC,qIAAA,CAAA,oBAAiB;oFAAC,WAAU;;wFAAiB;wFACzB,MAAM,QAAQ;;;;;;;;;;;;;sFAGrC,6LAAC;4EAAI,WAAU;;8FACb,6LAAC;oFAAI,WAAU;;sGACb,6LAAC;;8GACC,6LAAC;oGAAM,WAAU;8GAAyB;;;;;;8GAC1C,6LAAC;oGAAI,WAAU;8GAAwB,MAAM,QAAQ;;;;;;;;;;;;sGAEvD,6LAAC;;8GACC,6LAAC;oGAAM,WAAU;8GAAyB;;;;;;8GAC1C,6LAAC;8GACC,cAAA,6LAAC,oIAAA,CAAA,QAAK;wGAAC,WAAW,GAAG,iBAAiB,MAAM,MAAM,EAAE,WAAW,CAAC;kHAC7D,MAAM,MAAM;;;;;;;;;;;;;;;;;sGAInB,6LAAC;;8GACC,6LAAC;oGAAM,WAAU;8GAAyB;;;;;;8GAC1C,6LAAC;oGAAI,WAAU;8GAAc,MAAM,QAAQ;;;;;;;;;;;;sGAE7C,6LAAC;;8GACC,6LAAC;oGAAM,WAAU;8GAAyB;;;;;;8GAC1C,6LAAC;oGAAI,WAAU;8GAAc,MAAM,OAAO;;;;;;;;;;;;sGAE5C,6LAAC;;8GACC,6LAAC;oGAAM,WAAU;8GAAyB;;;;;;8GAC1C,6LAAC;oGAAI,WAAU;8GAAc,MAAM,SAAS;;;;;;;;;;;;sGAE9C,6LAAC;;8GACC,6LAAC;oGAAM,WAAU;8GAAyB;;;;;;8GAC1C,6LAAC;oGAAI,WAAU;8GAAc,MAAM,OAAO;;;;;;;;;;;;sGAE5C,6LAAC;;8GACC,6LAAC;oGAAM,WAAU;8GAAyB;;;;;;8GAC1C,6LAAC;oGAAI,WAAU;;wGACZ,MAAM,KAAK;wGAAE,MAAM,IAAI;;;;;;;;;;;;;sGAG5B,6LAAC;;8GACC,6LAAC;oGAAM,WAAU;8GAAyB;;;;;;8GAC1C,6LAAC;oGAAI,WAAU;;wGACZ,MAAM,SAAS;wGAAE,MAAM,IAAI;;;;;;;;;;;;;sGAGhC,6LAAC;;8GACC,6LAAC;oGAAM,WAAU;8GAAyB;;;;;;8GAC1C,6LAAC;oGAAI,WAAU;;wGAA2B;wGACtC,KAAK,KAAK,CAAC,AAAC,CAAC,MAAM,SAAS,GAAG,MAAM,KAAK,IAAI,MAAM,SAAS,GAAI;wGAAK;;;;;;;;;;;;;sGAG5E,6LAAC;;8GACC,6LAAC;oGAAM,WAAU;8GAAyB;;;;;;8GAC1C,6LAAC;oGAAI,WAAU;8GAAc,iBAAiB;;;;;;;;;;;;sGAEhD,6LAAC;;8GACC,6LAAC;oGAAM,WAAU;8GAAyB;;;;;;8GAC1C,6LAAC;oGAAI,WAAU;8GACZ,IAAI,KAAK,MAAM,SAAS,EAAE,cAAc;;;;;;;;;;;;;;;;;;8FAK/C,6LAAC;;sGACC,6LAAC;4FAAM,WAAU;sGAAoC;;;;;;sGACrD,6LAAC,uIAAA,CAAA,WAAQ;4FACP,aAAY;4FACZ,WAAU;;;;;;;;;;;;8FAId,6LAAC;oFAAI,WAAU;;sGACb,6LAAC,qIAAA,CAAA,SAAM;4FAAC,WAAU;sGAAoC;;;;;;sGAGtD,6LAAC,qIAAA,CAAA,SAAM;4FAAC,SAAQ;4FAAU,WAAU;sGAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAhI5D,MAAM,EAAE;;;;;;;;;;;;;;;kCAgJ3B,6LAAC,mIAAA,CAAA,cAAW;wBAAC,OAAM;wBAAY,WAAU;kCACvC,cAAA,6LAAC;4BAAI,WAAU;sCACZ,WAAW,cAAc,CAAC,GAAG,CAAC,CAAC,yBAC9B,6LAAC,mIAAA,CAAA,OAAI;oCAAmB,WAAU;;sDAChC,6LAAC,mIAAA,CAAA,aAAU;;8DACT,6LAAC,mIAAA,CAAA,YAAS;oDAAC,WAAU;8DAClB,SAAS,IAAI;;;;;;8DAEhB,6LAAC,mIAAA,CAAA,kBAAe;oDAAC,WAAU;8DACxB,SAAS,OAAO;;;;;;;;;;;;sDAGrB,6LAAC,mIAAA,CAAA,cAAW;sDACV,cAAA,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAK,WAAU;0EAAyB;;;;;;0EACzC,6LAAC;gEAAK,WAAU;0EAA0B,SAAS,KAAK;;;;;;;;;;;;kEAE1D,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAK,WAAU;0EAAyB;;;;;;0EACzC,6LAAC,oIAAA,CAAA,QAAK;gEAAC,WAAU;0EACd,SAAS,QAAQ;;;;;;;;;;;;kEAGtB,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAK,WAAU;0EAAyB;;;;;;0EACzC,6LAAC,oIAAA,CAAA,QAAK;gEAAC,WAAU;0EACd,SAAS,QAAQ;;;;;;;;;;;;kEAGtB,6LAAC;wDAAI,WAAU;kEACb,cAAA,6LAAC;4DAAI,WAAU;;gEAAyB;gEAC5B,SAAS,aAAa,CAAC,QAAQ;gEAAE,SAAS,aAAa,CAAC,IAAI;;;;;;;;;;;;;;;;;;;;;;;;mCA7BrE,SAAS,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCpC;GA/awB;KAAA","debugId":null}},
    {"offset": {"line": 8350, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/data-input/DataInputModal.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from 'react'\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Calendar } from '@/components/ui/calendar'\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover'\nimport { format } from 'date-fns'\nimport { PROCESSING_LOCATIONS } from '@/lib/data'\nimport { Plus, Upload, Scan } from 'lucide-react'\n\ninterface DataInputModalProps {\n  onDataAdded: (newData: any) => void\n}\n\nexport default function DataInputModal({ onDataAdded }: DataInputModalProps) {\n  const [open, setOpen] = useState(false)\n  const [inputMode, setInputMode] = useState<'manual' | 'barcode' | 'upload'>('manual')\n  const [formData, setFormData] = useState({\n    locationId: '',\n    product: '',\n    parameter: '',\n    value: '',\n    unit: '',\n    targetMin: '',\n    date: new Date(),\n    sampleId: '',\n    analyst: '',\n    notes: ''\n  })\n\n  const selectedLocation = PROCESSING_LOCATIONS.find(loc => loc.id === formData.locationId)\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!selectedLocation) return\n    \n    const newData = {\n      id: `manual_${Date.now()}`,\n      locationId: formData.locationId,\n      location: selectedLocation.name,\n      product: selectedLocation.product,\n      parameter: selectedLocation.targetQuality.parameter,\n      value: parseFloat(formData.value),\n      unit: selectedLocation.targetQuality.unit,\n      targetMin: selectedLocation.targetQuality.minValue,\n      date: format(formData.date, 'yyyy-MM-dd'),\n      timestamp: formData.date.toISOString(),\n      status: parseFloat(formData.value) >= selectedLocation.targetQuality.minValue ? 'PASS' : 'FAIL',\n      sampleId: formData.sampleId || `SAMPLE-${Date.now()}`,\n      analyst: formData.analyst || 'Lab Analyst',\n      notes: formData.notes\n    }\n    \n    onDataAdded(newData)\n    setOpen(false)\n    setFormData({\n      locationId: '',\n      product: '',\n      parameter: '',\n      value: '',\n      unit: '',\n      targetMin: '',\n      date: new Date(),\n      sampleId: '',\n      analyst: '',\n      notes: ''\n    })\n  }\n\n  const handleLocationChange = (locationId: string) => {\n    const location = PROCESSING_LOCATIONS.find(loc => loc.id === locationId)\n    if (location) {\n      setFormData({\n        ...formData,\n        locationId,\n        product: location.product,\n        parameter: location.targetQuality.parameter,\n        unit: location.targetQuality.unit,\n        targetMin: location.targetQuality.minValue.toString()\n      })\n    }\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        <Button className=\"bg-orange-600 hover:bg-orange-700\">\n          <Plus className=\"w-4 h-4 mr-2\" />\n          Add New Sample\n        </Button>\n      </DialogTrigger>\n      <DialogContent className=\"bg-slate-800 border-slate-700 text-white max-w-2xl\">\n        <DialogHeader>\n          <DialogTitle>Add New Lab Analysis Result</DialogTitle>\n          <DialogDescription className=\"text-slate-400\">\n            Input new quality data from laboratory analysis\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Input Mode Selection */}\n          <div className=\"flex space-x-2\">\n            <Button\n              variant={inputMode === 'manual' ? 'default' : 'outline'}\n              onClick={() => setInputMode('manual')}\n              className={inputMode === 'manual' ? 'bg-orange-600' : ''}\n            >\n              <Plus className=\"w-4 h-4 mr-2\" />\n              Manual Entry\n            </Button>\n            <Button\n              variant={inputMode === 'barcode' ? 'default' : 'outline'}\n              onClick={() => setInputMode('barcode')}\n              className={inputMode === 'barcode' ? 'bg-orange-600' : ''}\n            >\n              <Scan className=\"w-4 h-4 mr-2\" />\n              Barcode Scan\n            </Button>\n            <Button\n              variant={inputMode === 'upload' ? 'default' : 'outline'}\n              onClick={() => setInputMode('upload')}\n              className={inputMode === 'upload' ? 'bg-orange-600' : ''}\n            >\n              <Upload className=\"w-4 h-4 mr-2\" />\n              Upload Document\n            </Button>\n          </div>\n\n          {inputMode === 'manual' && (\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label className=\"text-slate-300\">Processing Location</Label>\n                  <Select value={formData.locationId} onValueChange={handleLocationChange} required>\n                    <SelectTrigger className=\"bg-slate-700 border-slate-600\">\n                      <SelectValue placeholder=\"Select location\" />\n                    </SelectTrigger>\n                    <SelectContent className=\"bg-slate-800 border-slate-700\">\n                      {PROCESSING_LOCATIONS.map(location => (\n                        <SelectItem key={location.id} value={location.id}>\n                          {location.name}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <Label className=\"text-slate-300\">Analysis Date</Label>\n                  <Popover>\n                    <PopoverTrigger asChild>\n                      <Button\n                        variant=\"outline\"\n                        className=\"w-full bg-slate-700 border-slate-600 text-white\"\n                      >\n                        {format(formData.date, 'PPP')}\n                      </Button>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-auto p-0 bg-slate-800 border-slate-700\">\n                      <Calendar\n                        mode=\"single\"\n                        selected={formData.date}\n                        onSelect={(date) => date && setFormData({...formData, date})}\n                        className=\"rounded-md border-0\"\n                      />\n                    </PopoverContent>\n                  </Popover>\n                </div>\n              </div>\n\n              {selectedLocation && (\n                <div className=\"p-4 bg-slate-700/30 rounded-lg\">\n                  <h4 className=\"text-white font-medium mb-2\">Location Details</h4>\n                  <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                    <div>\n                      <span className=\"text-slate-400\">Product:</span>\n                      <span className=\"text-white ml-2\">{selectedLocation.product}</span>\n                    </div>\n                    <div>\n                      <span className=\"text-slate-400\">Parameter:</span>\n                      <span className=\"text-white ml-2\">{selectedLocation.targetQuality.parameter}</span>\n                    </div>\n                    <div>\n                      <span className=\"text-slate-400\">Unit:</span>\n                      <span className=\"text-white ml-2\">{selectedLocation.targetQuality.unit}</span>\n                    </div>\n                    <div>\n                      <span className=\"text-slate-400\">Target:</span>\n                      <span className=\"text-white ml-2\">≥{selectedLocation.targetQuality.minValue}</span>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label className=\"text-slate-300\">Sample ID</Label>\n                  <Input\n                    value={formData.sampleId}\n                    onChange={(e) => setFormData({...formData, sampleId: e.target.value})}\n                    placeholder=\"e.g., DISCHARGE-001\"\n                    className=\"bg-slate-700 border-slate-600\"\n                  />\n                </div>\n\n                <div>\n                  <Label className=\"text-slate-300\">Analyst Name</Label>\n                  <Input\n                    value={formData.analyst}\n                    onChange={(e) => setFormData({...formData, analyst: e.target.value})}\n                    placeholder=\"Lab analyst name\"\n                    className=\"bg-slate-700 border-slate-600\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <Label className=\"text-slate-300\">Measured Value</Label>\n                <Input\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={formData.value}\n                  onChange={(e) => setFormData({...formData, value: e.target.value})}\n                  placeholder={`Enter ${selectedLocation?.targetQuality.parameter} value`}\n                  className=\"bg-slate-700 border-slate-600\"\n                  required\n                />\n              </div>\n\n              <div>\n                <Label className=\"text-slate-300\">Notes (Optional)</Label>\n                <Textarea\n                  value={formData.notes}\n                  onChange={(e) => setFormData({...formData, notes: e.target.value})}\n                  placeholder=\"Additional notes or observations...\"\n                  className=\"bg-slate-700 border-slate-600\"\n                  rows={3}\n                />\n              </div>\n\n              <div className=\"flex justify-end space-x-2\">\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={() => setOpen(false)}\n                  className=\"border-slate-600\"\n                >\n                  Cancel\n                </Button>\n                <Button type=\"submit\" className=\"bg-orange-600 hover:bg-orange-700\">\n                  Add Sample\n                </Button>\n              </div>\n            </form>\n          )}\n\n          {inputMode === 'barcode' && (\n            <div className=\"text-center py-8\">\n              <div className=\"text-6xl mb-4\">📱</div>\n              <h3 className=\"text-xl font-medium text-white mb-2\">Barcode Scanner</h3>\n              <p className=\"text-slate-400 mb-4\">\n                Point your camera at the sample barcode to automatically populate the data\n              </p>\n              <div className=\"bg-slate-700/50 rounded-lg p-8\">\n                <div className=\"w-64 h-64 mx-auto bg-slate-600 rounded-lg flex items-center justify-center\">\n                  <div className=\"text-slate-400\">Camera Preview</div>\n                </div>\n              </div>\n              <p className=\"text-sm text-slate-400 mt-4\">\n                Barcode scanning feature coming soon...\n              </p>\n            </div>\n          )}\n\n          {inputMode === 'upload' && (\n            <div className=\"text-center py-8\">\n              <div className=\"text-6xl mb-4\">📄</div>\n              <h3 className=\"text-xl font-medium text-white mb-2\">Upload Lab Report</h3>\n              <p className=\"text-slate-400 mb-4\">\n                Upload PDF, CSV, or Excel files containing lab analysis results\n              </p>\n              <div className=\"bg-slate-700/50 rounded-lg p-8\">\n                <div className=\"border-2 border-dashed border-slate-600 rounded-lg p-8\">\n                  <Upload className=\"w-12 h-12 mx-auto mb-4 text-slate-400\" />\n                  <p className=\"text-slate-400\">Drag & drop files here or click to browse</p>\n                  <p className=\"text-sm text-slate-500 mt-2\">\n                    Supports: PDF, CSV, XLSX\n                  </p>\n                </div>\n              </div>\n              <p className=\"text-sm text-slate-400 mt-4\">\n                Document upload feature coming soon...\n              </p>\n            </div>\n          )}\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9163, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/dashboard/Dashboard.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from 'react'\nimport { Routes, Route, useNavigate, useLocation } from 'react-router-dom'\nimport { useAuth } from '@/contexts/AuthContext'\nimport { Button } from '@/components/ui/button'\nimport { Card } from '@/components/ui/card'\nimport { Separator } from '@/components/ui/separator'\nimport DashboardOverview from './DashboardOverview'\nimport DashboardReports from './DashboardReports'\nimport DashboardLocations from './DashboardLocations'\nimport DashboardHistory from './DashboardHistory'\nimport DashboardAlerts from './DashboardAlerts'\nimport DataInputModal from '@/components/data-input/DataInputModal'\nimport { SAMPLE_DATA } from '@/lib/data'\n\nconst navigation = [\n  { name: 'Overview', path: '/dashboard', icon: '📊' },\n  { name: 'Reports', path: '/dashboard/reports', icon: '📈' },\n  { name: 'Locations', path: '/dashboard/locations', icon: '📍' },\n  { name: 'History', path: '/dashboard/history', icon: '📅' },\n  { name: 'Alerts', path: '/dashboard/alerts', icon: '🚨' },\n]\n\nexport default function Dashboard() {\n  const { user, logout } = useAuth()\n  const navigate = useNavigate()\n  const location = useLocation()\n  const [sidebarOpen, setSidebarOpen] = useState(true)\n  const [data, setData] = useState(SAMPLE_DATA)\n\n  const handleDataAdded = (newData: any) => {\n    setData(prevData => [newData, ...prevData])\n  }\n\n  const handleLogout = () => {\n    logout()\n    navigate('/login')\n  }\n\n  const isActive = (path: string) => {\n    if (path === '/dashboard') {\n      return location.pathname === '/dashboard'\n    }\n    return location.pathname.startsWith(path)\n  }\n\n  return (\n    <div className=\"min-h-screen bg-slate-900 flex\">\n      {/* Sidebar */}\n      <div className={`${sidebarOpen ? 'w-64' : 'w-16'} bg-slate-800 border-r border-slate-700 transition-all duration-300 flex flex-col`}>\n        {/* Header */}\n        <div className=\"p-4 border-b border-slate-700\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-10 h-10 bg-gradient-to-r from-orange-500 to-red-600 rounded-lg flex items-center justify-center\">\n              <span className=\"text-white font-bold text-lg\">SX</span>\n            </div>\n            {sidebarOpen && (\n              <div>\n                <h1 className=\"text-white font-bold text-lg\">SmelterXplore™️</h1>\n                <p className=\"text-slate-400 text-xs\">Quality Monitoring</p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Navigation */}\n        <nav className=\"flex-1 p-4 space-y-2\">\n          {navigation.map((item) => (\n            <button\n              key={item.path}\n              onClick={() => navigate(item.path)}\n              className={`w-full flex items-center space-x-3 px-3 py-2 rounded-lg transition-colors ${\n                isActive(item.path)\n                  ? 'bg-orange-600 text-white'\n                  : 'text-slate-300 hover:bg-slate-700 hover:text-white'\n              }`}\n            >\n              <span className=\"text-lg\">{item.icon}</span>\n              {sidebarOpen && <span className=\"font-medium\">{item.name}</span>}\n            </button>\n          ))}\n        </nav>\n\n        {/* User Info & Logout */}\n        <div className=\"p-4 border-t border-slate-700\">\n          {sidebarOpen && (\n            <div className=\"mb-3\">\n              <p className=\"text-slate-400 text-xs\">Logged in as</p>\n              <p className=\"text-white font-medium\">{user?.username}</p>\n            </div>\n          )}\n          <Button\n            onClick={handleLogout}\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"w-full bg-slate-700 border-slate-600 text-slate-300 hover:bg-slate-600 hover:text-white\"\n          >\n            {sidebarOpen ? 'Logout' : '🚪'}\n          </Button>\n        </div>\n\n        {/* Sidebar Toggle */}\n        <button\n          onClick={() => setSidebarOpen(!sidebarOpen)}\n          className=\"absolute top-4 -right-3 w-6 h-6 bg-slate-700 border border-slate-600 rounded-full flex items-center justify-center text-slate-300 hover:bg-slate-600 hover:text-white transition-colors\"\n        >\n          {sidebarOpen ? '←' : '→'}\n        </button>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1 flex flex-col\">\n        {/* Top Bar */}\n        <div className=\"bg-slate-800 border-b border-slate-700 px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h2 className=\"text-xl font-semibold text-white\">\n                {navigation.find(nav => isActive(nav.path))?.name || 'Dashboard'}\n              </h2>\n              <p className=\"text-slate-400 text-sm\">\n                Real-time quality monitoring and analysis\n              </p>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <DataInputModal onDataAdded={handleDataAdded} />\n              <div className=\"text-right\">\n                <p className=\"text-slate-400 text-xs\">Last Updated</p>\n                <p className=\"text-white text-sm font-medium\">\n                  {new Date().toLocaleTimeString()}\n                </p>\n              </div>\n              <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n            </div>\n          </div>\n        </div>\n\n        {/* Content Area */}\n        <div className=\"flex-1 p-6 overflow-auto\">\n          <Routes>\n            <Route path=\"/\" element={<DashboardOverview />} />\n            <Route path=\"/reports\" element={<DashboardReports />} />\n            <Route path=\"/locations\" element={<DashboardLocations />} />\n            <Route path=\"/history\" element={<DashboardHistory />} />\n            <Route path=\"/alerts\" element={<DashboardAlerts />} />\n          </Routes>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9594, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom'\nimport LoginPage from '@/components/auth/LoginPage'\nimport Dashboard from '@/components/dashboard/Dashboard'\nimport { AuthProvider, useAuth } from '@/contexts/AuthContext'\n\nfunction AppContent() {\n  const { isAuthenticated } = useAuth()\n\n  return (\n    <Routes>\n      <Route \n        path=\"/login\" \n        element={!isAuthenticated ? <LoginPage /> : <Navigate to=\"/dashboard\" />} \n      />\n      <Route \n        path=\"/dashboard/*\" \n        element={isAuthenticated ? <Dashboard /> : <Navigate to=\"/login\" />} \n      />\n      <Route \n        path=\"/\" \n        element={<Navigate to={isAuthenticated ? \"/dashboard\" : \"/login\"} />} \n      />\n    </Routes>\n  )\n}\n\nexport default function Home() {\n  return (\n    <AuthProvider>\n      <Router>\n        <div className=\"min-h-screen bg-background\">\n          <AppContent />\n        </div>\n      </Router>\n    </AuthProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;;;AANA;;;;;AAQA,SAAS;;IACP,MAAM,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IAElC,qBACE,6LAAC,+KAAA,CAAA,SAAM;;0BACL,6LAAC,+KAAA,CAAA,QAAK;gBACJ,MAAK;gBACL,SAAS,CAAC,gCAAkB,6LAAC,0IAAA,CAAA,UAAS;;;;2CAAM,6LAAC,+KAAA,CAAA,WAAQ;oBAAC,IAAG;;;;;;;;;;;0BAE3D,6LAAC,+KAAA,CAAA,QAAK;gBACJ,MAAK;gBACL,SAAS,gCAAkB,6LAAC,+IAAA,CAAA,UAAS;;;;2CAAM,6LAAC,+KAAA,CAAA,WAAQ;oBAAC,IAAG;;;;;;;;;;;0BAE1D,6LAAC,+KAAA,CAAA,QAAK;gBACJ,MAAK;gBACL,uBAAS,6LAAC,+KAAA,CAAA,WAAQ;oBAAC,IAAI,kBAAkB,eAAe;;;;;;;;;;;;;;;;;AAIhE;GAnBS;;QACqB,kIAAA,CAAA,UAAO;;;KAD5B;AAqBM,SAAS;IACtB,qBACE,6LAAC,kIAAA,CAAA,eAAY;kBACX,cAAA,6LAAC,+KAAA,CAAA,gBAAM;sBACL,cAAA,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;;;;;;;;;;;;;;;;;;;;AAKX;MAVwB","debugId":null}}]
}